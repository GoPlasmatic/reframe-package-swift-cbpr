{
    "id": "mt202cov-precondition",
    "name": "MT202 COV Message Precondition",
    "description": "Precondition checks for MT202 COV message including validation from PREC001 and PREC002",
    "priority": 4,
    "condition": { "and": [
        {"==": [{"var": "metadata.direction"}, "outgoing"]},
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "202"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "cover"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt202cov-bah-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "construct_business_application_header"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "validate_mandatory_and_structural",
            "name": "Validate Mandatory Fields and Structural Requirements",
            "description": "Validates BAH translation, rejection/return checks, mandatory fields, and cover payment structure",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.validation_error",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "temp_data.Sender"},
                                        {"var": "temp_data.Receiver"},
                                        {"!=": [{"var": "temp_data.Sender"}, "NOTPROVIDED"]},
                                        {"!=": [{"var": "temp_data.Receiver"}, "NOTPROVIDED"]}
                                    ]}
                                },
                                "Translation stopped: BAH translation not completed properly - TempSender or TempReceiver not defined",
                                { "if": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        { "or": [
                                            {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/REJT/"]},
                                            {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/RETN/"]}
                                        ]}
                                    ]},
                                    "T20063: Translation stopped: Rejection or Return message detected in Field 72",
                                    { "if": [
                                        {
                                            "!": { "and": [
                                                {"var": "data.SwiftMT.fields.20.reference"},
                                                {"var": "data.SwiftMT.fields.21.reference"},
                                                {"var": "data.SwiftMT.fields.32A.value_date"},
                                                {"var": "data.SwiftMT.fields.32A.currency"},
                                                {"var": "data.SwiftMT.fields.32A.amount"},
                                                { "or": [
                                                    {"var": "data.SwiftMT.fields.58.A"},
                                                    {"var": "data.SwiftMT.fields.58.D"}
                                                ]},
                                                {"!=": [{"var": "data.SwiftMT.fields.20.reference"}, ""]},
                                                {"!=": [{"var": "data.SwiftMT.fields.21.reference"}, ""]},
                                                {"!=": [{"var": "data.SwiftMT.fields.32A.currency"}, ""]},
                                                {">=": [{"var": "data.SwiftMT.fields.32A.amount"}, 0]}
                                            ]}
                                        },
                                        "T20080: Mandatory MT202 COV fields (20, 21, 32A, 58A/D) are missing or invalid",
                                        null
                                    ]}
                                ]}
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "extract_field72_and_cover_codes",
            "name": "Extract Field 72 and Cover Payment Codes",
            "description": "Extract field 72 codes including /INS/, /PHONBEN/, /TELEBEN/, /COVE/, /UDLC/ for METAFCT003 logic",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field_72_has_ins",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/INS/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_phon",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                { "or": [
                                    {
                                        "some": [
                                            {"var": "data.SwiftMT.fields.72.information"},
                                            {"starts_with": [{"var": ""}, "/PHONBEN/"]}
                                        ]
                                    },
                                    {
                                        "some": [
                                            {"var": "data.SwiftMT.fields.72.information"},
                                            {"starts_with": [{"var": ""}, "/TELEBEN/"]}
                                        ]
                                    }
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_cove",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/COVE/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_udlc",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/UDLC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.warning_T20200",
                            "logic": { "if": [
                                {"var": "temp_data.field_72_has_phon"},
                                "T20200: Field 72 contains phone/telephone beneficiary information",
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "implement_metafct003_and_settlement",
            "name": "Implement METAFCT003 and Determine Settlement",
            "description": "Implements METAFCT003 logic for Cover payment settlement method determination and sets cover message type",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.sender_bic_8char",
                            "logic": {
                                "substr": [{"var": "temp_data.Sender"}, 0, 8]
                            }
                        },
                        {
                            "path": "temp_data.receiver_bic_8char",
                            "logic": {
                                "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                            }
                        },
                        {
                            "path": "temp_data.field_53a_bic_8char",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.53.A.bic"},
                                {
                                    "substr": [{"var": "data.SwiftMT.fields.53.A.bic"}, 0, 8]
                                },
                                { "if": [
                                    {"var": "data.SwiftMT.fields.53.B.bic"},
                                    {
                                        "substr": [{"var": "data.SwiftMT.fields.53.B.bic"}, 0, 8]
                                    },
                                    { "if": [
                                        {"var": "data.SwiftMT.fields.53.D.bic"},
                                        {
                                            "substr": [{"var": "data.SwiftMT.fields.53.D.bic"}, 0, 8]
                                        },
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.field_54a_bic_8char",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.54.A.bic"},
                                {
                                    "substr": [{"var": "data.SwiftMT.fields.54.A.bic"}, 0, 8]
                                },
                                { "if": [
                                    {"var": "data.SwiftMT.fields.54.B.bic"},
                                    {
                                        "substr": [{"var": "data.SwiftMT.fields.54.B.bic"}, 0, 8]
                                    },
                                    { "if": [
                                        {"var": "data.SwiftMT.fields.54.D.bic"},
                                        {
                                            "substr": [{"var": "data.SwiftMT.fields.54.D.bic"}, 0, 8]
                                        },
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.metafct003_table",
                            "logic": { "if": [
                                { "and": [
                                    {"!": {"var": "temp_data.field_53a_bic_8char"}},
                                    {"!": {"var": "temp_data.field_54a_bic_8char"}}
                                ]},
                                "TABLE1",
                                { "if": [
                                    { "and": [
                                        {"var": "temp_data.field_53a_bic_8char"},
                                        {"!": {"var": "temp_data.field_54a_bic_8char"}}
                                    ]},
                                    "TABLE2",
                                    { "if": [
                                        { "and": [
                                            {"!": {"var": "temp_data.field_53a_bic_8char"}},
                                            {"var": "temp_data.field_54a_bic_8char"}
                                        ]},
                                        "TABLE3",
                                        "TABLE4"
                                    ]}
                                ]}
                            ]}
                        },
                        {"path": "temp_data.MTType", "logic": "COVER"},
                        {"path": "temp_data.translation_target", "logic": "pacs.009.001.08.COVE"},
                        {
                            "path": "temp_data.settlement_method",
                            "logic": { "if": [
                                {"==": [{"var": "temp_data.metafct003_table"}, "TABLE1"]},
                                "INDA",
                                { "if": [
                                    {"==": [{"var": "temp_data.metafct003_table"}, "TABLE2"]},
                                    { "if": [
                                        { "and": [
                                            {"var": "data.SwiftMT.fields.53.B.party_identifier"},
                                            {"starts_with": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, "/C"]}
                                        ]},
                                        "INGA",
                                        "INDA"
                                    ]},
                                    { "if": [
                                        {"==": [{"var": "temp_data.metafct003_table"}, "TABLE3"]},
                                        "INDA",
                                        { "if": [
                                            { "and": [
                                                {"var": "data.SwiftMT.fields.53.B.party_identifier"},
                                                {"starts_with": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, "/C"]}
                                            ]},
                                            "INGA",
                                            "INDA"
                                        ]}
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.settlement_account",
                            "logic": { "if": [
                                { "and": [
                                    {"==": [{"var": "temp_data.settlement_method"}, "INGA"]},
                                    {"var": "data.SwiftMT.fields.53.B.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, "/C"]}
                                ]},
                                {"substr": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, 1]},
                                ""
                            ]}
                        },
                        {
                            "path": "temp_data.instruction_for_next_agent_fin53",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.field_72_has_ins"},
                                    {"var": "temp_data.field_53a_bic_8char"}
                                ]},
                                "/INS/",
                                ""
                            ]}
                        },
                        {
                            "path": "temp_data.instruction_for_next_agent_fin54",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.field_72_has_ins"},
                                    {"var": "temp_data.field_54a_bic_8char"}
                                ]},
                                "/INS/",
                                ""
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "validate_sequence_b_and_cover_structure",
            "name": "Validate Sequence B and Cover Structure",
            "description": "Validate sequence B fields for underlying customer information and cover payment structure",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.has_sequence_b_50",
                            "logic": { "or": [
                                {"exists": ["data", "SwiftMT", "fields", "50A"]},
                                {"exists": ["data", "SwiftMT", "fields", "50F"]},
                                {"exists": ["data", "SwiftMT", "fields", "50K"]}
                            ]}
                        },
                        {
                            "path": "temp_data.has_sequence_b_59",
                            "logic": { "or": [
                                {"exists": ["data", "SwiftMT", "fields", "59"]},
                                {"exists": ["data", "SwiftMT", "fields", "59A"]},
                                {"exists": ["data", "SwiftMT", "fields", "59F"]}
                            ]}
                        },
                        {
                            "path": "temp_data.has_sequence_b",
                            "logic": { "and": [
                                {"var": "temp_data.has_sequence_b_50"},
                                {"var": "temp_data.has_sequence_b_59"}
                            ]}
                        },
                        {
                            "path": "temp_data.has_field_70",
                            "logic": {"exists": ["data", "SwiftMT", "fields", "70", "narrative"]}
                        },
                        {
                            "path": "temp_data.amount_value",
                            "logic": {"var": "data.SwiftMT.fields.32A.amount"}
                        },
                        {
                            "path": "temp_data.value_date",
                            "logic": {"var": "data.SwiftMT.fields.32A.value_date"}
                        },
                        {"path": "temp_data.currency", "logic": {"var": "data.SwiftMT.fields.32A.currency"}},
                        {
                            "path": "temp_data.cover_structure_error",
                            "logic": { "if": [
                                { "and": [
                                    {"!": {"var": "temp_data.has_sequence_b"}},
                                    {
                                        "!": { "and": [
                                            { "or": [
                                                {"var": "data.SwiftMT.fields.52.A"},
                                                {"var": "data.SwiftMT.fields.52.D"}
                                            ]},
                                            { "or": [
                                                {"var": "data.SwiftMT.fields.56.A"},
                                                {"var": "data.SwiftMT.fields.56.D"},
                                                {"var": "data.SwiftMT.fields.57.A"},
                                                {"var": "data.SwiftMT.fields.57.B"},
                                                {"var": "data.SwiftMT.fields.57.D"}
                                            ]}
                                        ]}
                                    }
                                ]},
                                "T20081: MT202 COV requires proper cover payment structure with sequence B or appropriate agent fields",
                                null
                            ]}
                        },
                        {
                            "path": "warnings",
                            "logic": { "if": [
                                {"var": "temp_data.has_sequence_b"},
                                [
                                    {
                                        "code": "T20082",
                                        "message": "Sequence B (Underlying Customer Credit Transfer) detected. Ensure proper mapping of customer fields.",
                                        "severity": "WARNING",
                                        "field": "50/59"
                                    }
                                ],
                                []
                            ]}
                        }
                    ]
                }
            }
        }
    ]
}
