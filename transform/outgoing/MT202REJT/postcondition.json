{
    "id": "mt202-rejt-postcondition",
    "name": "MT202 REJT to pacs.002 Post-condition Validation",
    "description": "Post-condition validation for MT202 REJT to pacs.002 CBPR+ transformation ensuring output compliance",
    "priority": 6,
    "condition": { "and": [
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "202"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "reject"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt202-rejt-document-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "publish_mx_message"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "validate_rejection_status_and_identifiers",
            "name": "Validate Rejection Status and Identifiers",
            "description": "Validate rejection status is RJCT, original instruction ID is present, and message name ID is correct",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.postc001_rejection_status_error",
                            "logic": { "if": [
                                {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.TxSts"}, "RJCT"]},
                                "Transaction status must be RJCT for rejection messages",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.postc002_original_instruction_error",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlInstrId"},
                                        {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlInstrId"}, ""]}
                                    ]}
                                },
                                "Original Instruction ID must be present (extracted from MREF or NOTPROVIDED)",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.postc003_message_name_error",
                            "logic": { "if": [
                                {
                                    "!": {
                                        "in": [
                                            {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlGrpInf.OrgnlMsgNmId"},
                                            ["MT202", "MT205", "MT202 COVE", "MT205 COVE"]
                                        ]
                                    }
                                },
                                "Original Message Name ID must be MT202, MT205, MT202 COVE, or MT205 COVE",
                                null
                            ]}
                        }
                    ],
                    "preserve": true
                }
            }
        },
        {
            "id": "validate_rejection_reason_and_additional_info",
            "name": "Validate Rejection Reason and Additional Information",
            "description": "Validate rejection reason code mapping and additional information format",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.postc004_rejection_reason_error",
                            "logic": { "if": [
                                {"var": "temp_data.rejection_code"},
                                { "if": [
                                    {
                                        "!": { "or": [
                                            {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.StsRsnInf.Rsn.Cd"}, null]},
                                            {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.StsRsnInf.Rsn.Prtry"}, null]}
                                        ]}
                                    },
                                    "Rejection reason code must be mapped to either Cd (standard) or Prtry (proprietary)",
                                    null
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.postc007_additional_info_error",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.rejection_code"},
                                    {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.StsRsnInf.AddtlInf.0"}
                                ]},
                                { "if": [
                                    {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.StsRsnInf.AddtlInf.0"}, {"cat": ["/", {"var": "temp_data.rejection_code"}, "/"]}]},
                                    "Additional information should include rejection code in /CODE/ format",
                                    null
                                ]},
                                null
                            ]}
                        }
                    ],
                    "preserve": true
                }
            }
        },
        {
            "id": "validate_agents_and_uetr",
            "name": "Validate Agents and UETR Mapping",
            "description": "Validate instructing/instructed agents are properly set and UETR is correctly mapped",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.postc005_agents_error",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.Document.FIToFIPmtStsRpt.GrpHdr.InstgAgt.FinInstnId.BICFI"},
                                        {"var": "data.Document.FIToFIPmtStsRpt.GrpHdr.InstdAgt.FinInstnId.BICFI"},
                                        {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.GrpHdr.InstgAgt.FinInstnId.BICFI"}, "NOTPROVIDED"]},
                                        {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.GrpHdr.InstdAgt.FinInstnId.BICFI"}, "NOTPROVIDED"]}
                                    ]}
                                },
                                "Instructing and Instructed agents must be properly set from BAH translation",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.postc006_uetr_error",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                { "if": [
                                    {"!=": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlUETR"}, {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"}]},
                                    "UETR must be properly mapped to OriginalUETR field",
                                    null
                                ]},
                                null
                            ]}
                        }
                    ],
                    "preserve": true
                }
            }
        },
        {
            "id": "validate_amount_currency_and_party_restrictions",
            "name": "Validate Amount, Currency, and Party Restrictions",
            "description": "Validate original amount/currency match Field 32A and ensure party fields are not translated",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.postc008_amount_currency_error",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.32A"},
                                { "if": [
                                    {
                                        "!": { "and": [
                                            {"==": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlIntrBkSttlmAmt.@Ccy"}, {"var": "data.SwiftMT.fields.32A.currency"}]},
                                            {"==": [{"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlIntrBkSttlmAmt.$value"}, {"var": "data.SwiftMT.fields.32A.amount"}]}
                                        ]}
                                    },
                                    "Original amount and currency must match Field 32A values",
                                    null
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.postc009_party_fields_error",
                            "logic": { "if": [
                                { "or": [
                                    {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlDbtr"},
                                    {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlDbtrAgt"},
                                    {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlIntrmyAgt1"},
                                    {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlCdtrAgt"},
                                    {"var": "data.Document.FIToFIPmtStsRpt.TxInfAndSts.OrgnlCdtr"}
                                ]},
                                "Party fields should not be translated for pacs.002 rejection messages",
                                null
                            ]}
                        }
                    ],
                    "preserve": true
                }
            }
        },
        {
            "id": "set_postcondition_success",
            "name": "Set Post-condition Success",
            "description": "Mark post-condition validation as successful",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "temp_data.postcondition_validation", "logic": "SUCCESS"},
                        {"path": "temp_data.mt202rejt_compliance_version", "logic": "1.0.0"}
                    ]
                }
            }
        }
    ]
}
