{
    "id": "mt202-precondition",
    "name": "MT202 Message Precondition",
    "description": "Precondition checks for MT202 message including PREC003 for CORE/ADV determination and validation of mandatory fields",
    "priority": 4,
    "condition": { "and": [
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "202"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "normal"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt202-bah-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "construct_business_application_header"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "validate_and_extract_field72",
            "name": "Validate Context and Extract Field 72 Codes",
            "description": "Validates context, mandatory fields, and extracts field 72 codes for METAFCT002 and TR008 logic",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.validation_error",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "temp_data.Sender"},
                                        {"var": "temp_data.Receiver"},
                                        {"!=": [{"var": "temp_data.Sender"}, "NOTPROVIDED"]},
                                        {"!=": [{"var": "temp_data.Receiver"}, "NOTPROVIDED"]}
                                    ]}
                                },
                                "Translation stopped: TempSender or TempReceiver is not properly provided from TR001",
                                { "if": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        { "or": [
                                            {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/REJT/"]},
                                            {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/RETN/"]}
                                        ]}
                                    ]},
                                    "T20063: Translation stopped: Rejection or Return message detected in Field 72",
                                    { "if": [
                                        {
                                            "!": { "and": [
                                                {"var": "data.SwiftMT.fields.20.reference"},
                                                {"var": "data.SwiftMT.fields.32A.value_date"},
                                                {"var": "data.SwiftMT.fields.32A.currency"},
                                                {"var": "data.SwiftMT.fields.32A.amount"},
                                                {"var": "data.SwiftMT.fields.58.A"},
                                                {"!=": [{"var": "data.SwiftMT.fields.20.reference"}, ""]},
                                                {"!=": [{"var": "data.SwiftMT.fields.32A.currency"}, ""]},
                                                {">": [{"var": "data.SwiftMT.fields.32A.amount"}, 0]}
                                            ]}
                                        },
                                        "Translation stopped: Mandatory MT202 fields (20, 32A, 58A) are missing or invalid",
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_ins",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/INS/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_acc",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/ACC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_rec",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/REC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_bnf",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/BNF/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_tsu",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/TSU/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_udlc",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/UDLC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_phon",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                { "or": [
                                    {
                                        "some": [
                                            {"var": "data.SwiftMT.fields.72.information"},
                                            {"starts_with": [{"var": ""}, "/PHONBEN/"]}
                                        ]
                                    },
                                    {
                                        "some": [
                                            {"var": "data.SwiftMT.fields.72.information"},
                                            {"starts_with": [{"var": ""}, "/TELEBEN/"]}
                                        ]
                                    }
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.warning_T20200",
                            "logic": { "if": [
                                {"var": "temp_data.field_72_has_phon"},
                                "T20200: Field 72 contains phone/telephone beneficiary information",
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "detect_clearing_and_payment_type",
            "name": "Detect Clearing Channel and Payment Type (METAFCT002)",
            "description": "Detects RTGS clearing channel and implements METAFCT002 logic for Serial/Cover detection",
            "condition": {"!=": [{"var": "metadata.SwiftMT.message_type"}, "205"]},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.has_rtgs_indicator",
                            "logic": { "or": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56.A.party_identifier"},
                                    { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "//RT"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "//FW"]}
                                    ]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56.D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.56.D.party_identifier"}, "//RT"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.A.party_identifier"},
                                    { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "//RT"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "//FW"]}
                                    ]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.57.D.party_identifier"}, "//RT"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.58.A.party_identifier"},
                                    { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.58.A.party_identifier"}, "//RT"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.58.A.party_identifier"}, "//FW"]}
                                    ]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.58.D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.58.D.party_identifier"}, "//RT"]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.clearing_channel",
                            "logic": { "if": [
                                {"var": "temp_data.has_rtgs_indicator"},
                                "RTGS",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.sender_bic_8char",
                            "logic": {
                                "substr": [{"var": "temp_data.Sender"}, 0, 8]
                            }
                        },
                        {
                            "path": "temp_data.receiver_bic_8char",
                            "logic": {
                                "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                            }
                        },
                        {
                            "path": "temp_data.field_53a_bic_8char",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.53.A.bic"},
                                {
                                    "substr": [{"var": "data.SwiftMT.fields.53.A.bic"}, 0, 8]
                                },
                                { "if": [
                                    {"var": "data.SwiftMT.fields.53.B.bic"},
                                    {
                                        "substr": [{"var": "data.SwiftMT.fields.53.B.bic"}, 0, 8]
                                    },
                                    { "if": [
                                        {"var": "data.SwiftMT.fields.53.D.bic"},
                                        {
                                            "substr": [{"var": "data.SwiftMT.fields.53.D.bic"}, 0, 8]
                                        },
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.field_54a_bic_8char",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.54.A.bic"},
                                {
                                    "substr": [{"var": "data.SwiftMT.fields.54.A.bic"}, 0, 8]
                                },
                                { "if": [
                                    {"var": "data.SwiftMT.fields.54.B.bic"},
                                    {
                                        "substr": [{"var": "data.SwiftMT.fields.54.B.bic"}, 0, 8]
                                    },
                                    { "if": [
                                        {"var": "data.SwiftMT.fields.54.D.bic"},
                                        {
                                            "substr": [{"var": "data.SwiftMT.fields.54.D.bic"}, 0, 8]
                                        },
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.MTType",
                            "logic": { "if": [
                                { "and": [
                                    {"!": {"var": "temp_data.field_53a_bic_8char"}},
                                    {"!": {"var": "temp_data.field_54a_bic_8char"}}
                                ]},
                                "SERIAL",
                                { "if": [
                                    { "and": [
                                        {"var": "temp_data.field_53a_bic_8char"},
                                        {"!": {"var": "temp_data.field_54a_bic_8char"}},
                                        {"==": [{"var": "temp_data.field_53a_bic_8char"}, {"var": "temp_data.sender_bic_8char"}]}
                                    ]},
                                    "SERIAL",
                                    { "if": [
                                        { "and": [
                                            {"!": {"var": "temp_data.field_53a_bic_8char"}},
                                            {"var": "temp_data.field_54a_bic_8char"},
                                            {"==": [{"var": "temp_data.field_54a_bic_8char"}, {"var": "temp_data.receiver_bic_8char"}]}
                                        ]},
                                        "SERIAL",
                                        { "if": [
                                            { "and": [
                                                {"var": "temp_data.field_53a_bic_8char"},
                                                {"var": "temp_data.field_54a_bic_8char"},
                                                { "or": [
                                                    {"==": [{"var": "temp_data.field_53a_bic_8char"}, {"var": "temp_data.sender_bic_8char"}]},
                                                    {"==": [{"var": "temp_data.field_54a_bic_8char"}, {"var": "temp_data.receiver_bic_8char"}]}
                                                ]}
                                            ]},
                                            "SERIAL",
                                            "COVER"
                                        ]}
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.translation_target",
                            "logic": { "if": [
                                {"==": [{"var": "temp_data.MTType"}, "COVER"]},
                                "pacs.009.ADV",
                                "pacs.009.CORE"
                            ]}
                        },
                        {
                            "path": "temp_data.cover_validation_error",
                            "logic": { "if": [
                                {"==": [{"var": "temp_data.MTType"}, "COVER"]},
                                "Translation stopped: COVER payment type detected - must use pacs.009 ADV workflow instead of CORE (T20089)",
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "MT205_set_serial_type",
            "name": "MT205: Set Serial Payment Type",
            "description": "MT205 always translates to pacs.009 CORE (serial payment) - no field 54a present",
            "condition": {"==": [{"var": "metadata.SwiftMT.message_type"}, "205"]},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "temp_data.payment_scenario", "logic": "MT205_ALWAYS_SERIAL"},
                        {"path": "temp_data.MTType", "logic": "SERIAL"},
                        {"path": "temp_data.translation_target", "logic": "pacs.009.CORE"}
                    ]
                }
            }
        }
    ]
}
