{
    "id": "mt205-precondition",
    "name": "MT205 Message Precondition",
    "description": "Precondition checks for MT205 message with automatic CORE translation (always serial payment)",
    "priority": 4,
    "condition": { "and": [
        {"==": [{"var": "metadata.direction"}, "outgoing"]},
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "205"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "normal"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt205-bah-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "map_related_message_metadata"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "PREC001_validate_temp_variables",
            "name": "PREC001: Validate Temp Variables from TR001",
            "description": "Ensure Temp~Sender and Temp~Receiver are properly defined from BAH translation",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "temp_data",
                            "logic": { "and": [
                                {"var": "temp_data.Sender"},
                                {"var": "temp_data.Receiver"},
                                {"!=": [{"var": "temp_data.Sender"}, "NOTPROVIDED"]},
                                {"!=": [{"var": "temp_data.Receiver"}, "NOTPROVIDED"]}
                            ]},
                            "message": "T20001: Translation stopped: TempSender or TempReceiver is not properly provided from TR001"
                        }
                    ]
                }
            }
        },
        {
            "id": "PREC002_rejection_return_check",
            "name": "PREC002: Check for Rejection/Return in Field 72",
            "description": "IF Field 72, Line[1] starts with '/REJT/' OR '/RETN/' THEN T20063 STOP Translation",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "!": { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/REJT/"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/RETN/"]}
                                    ]}
                                },
                                true
                            ]},
                            "message": "T20063: Translation stopped: Rejection or Return message detected in Field 72"
                        }
                    ]
                }
            }
        },
        {
            "id": "PREC003_validate_mandatory_fields",
            "name": "PREC003: Validate Mandatory MT205 Fields",
            "description": "Ensure mandatory fields for MT205 are present and valid - field 52A is mandatory in MT205",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "and": [
                                {"var": "data.SwiftMT.fields.20.reference"},
                                {"var": "data.SwiftMT.fields.32A.value_date"},
                                {"var": "data.SwiftMT.fields.32A.currency"},
                                {"var": "data.SwiftMT.fields.32A.amount"},
                                { "or": [
                                    {"var": "data.SwiftMT.fields.52A"},
                                    {"var": "data.SwiftMT.fields.52D"}
                                ]},
                                { "or": [
                                    {"var": "data.SwiftMT.fields.58A"},
                                    {"var": "data.SwiftMT.fields.58D"}
                                ]},
                                {"!=": [{"var": "data.SwiftMT.fields.20.reference"}, ""]},
                                {"!=": [{"var": "data.SwiftMT.fields.32A.currency"}, ""]},
                                {">": [{"var": "data.SwiftMT.fields.32A.amount"}, 0]},
                                { "or": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.52A.bic"},
                                        {"!=": [{"var": "data.SwiftMT.fields.52A.bic"}, ""]}
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.52D.name_and_address"},
                                        {">=": [{"length": {"var": "data.SwiftMT.fields.52D.name_and_address"}}, 1]}
                                    ]}
                                ]}
                            ]},
                            "message": "T20064: Translation stopped: Mandatory MT205 fields (20, 32A, 52A, 58A) are missing or invalid"
                        }
                    ]
                }
            }
        },
        {
            "id": "PREC004_extract_field_54_and_72_codes",
            "name": "PREC004: Extract Field 54 and Field 72 Codes",
            "description": "Extract receiver's correspondent from Field 54 and process field 72 codes as per TR008",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field_54b_present",
                            "logic": {"!!": {"var": "data.SwiftMT.fields.54B"}}
                        },
                        {
                            "path": "temp_data.field_54b_party_identifier",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.54B.party_identifier"},
                                {"var": "data.SwiftMT.fields.54B.party_identifier"},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.field_54b_location",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.54B.location"},
                                {"var": "data.SwiftMT.fields.54B.location"},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.field_54_for_serial",
                            "logic": { "if": [
                                {"var": "temp_data.field_54b_present"},
                                {
                                    "cat": [
                                        "/FIN54/",
                                        {
                                            "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                                        }
                                    ]
                                },
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_acc",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/ACC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_ins",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/INS/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_rec",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/REC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_bnf",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/BNF/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_tsu",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/TSU/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_udlc",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "some": [
                                        {"var": "data.SwiftMT.fields.72.information"},
                                        {"starts_with": [{"var": ""}, "/UDLC/"]}
                                    ]
                                },
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field_72_has_phon",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                { "or": [
                                    {
                                        "some": [
                                            {"var": "data.SwiftMT.fields.72.information"},
                                            {"starts_with": [{"var": ""}, "/PHONBEN/"]}
                                        ]
                                    },
                                    {
                                        "some": [
                                            {"var": "data.SwiftMT.fields.72.information"},
                                            {"starts_with": [{"var": ""}, "/TELEBEN/"]}
                                        ]
                                    }
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.warning_T20200",
                            "logic": { "if": [
                                {"var": "temp_data.field_72_has_phon"},
                                "T20200: Field 72 contains phone/telephone beneficiary information",
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "PREC005_clearing_channel_detection",
            "name": "PREC005: Detect Clearing Channel (TR006)",
            "description": "Detect RTGS clearing channel based on //RT or //FW in agent fields",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.has_rtgs_indicator",
                            "logic": { "or": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56A.party_identifier"},
                                    { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.56A.party_identifier"}, "//RT"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.56A.party_identifier"}, "//FW"]}
                                    ]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.56D.party_identifier"}, "//RT"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57A.party_identifier"},
                                    { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.57A.party_identifier"}, "//RT"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.57A.party_identifier"}, "//FW"]}
                                    ]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.57D.party_identifier"}, "//RT"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.58A.party_identifier"},
                                    { "or": [
                                        {"starts_with": [{"var": "data.SwiftMT.fields.58A.party_identifier"}, "//RT"]},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.58A.party_identifier"}, "//FW"]}
                                    ]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.58D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.58D.party_identifier"}, "//RT"]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.clearing_channel",
                            "logic": { "if": [
                                {"var": "temp_data.has_rtgs_indicator"},
                                "RTGS",
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "MT205_set_core_translation",
            "name": "MT205: Set to CORE Translation",
            "description": "MT205 always translates to pacs.009 CORE (corporate serial payment) - no field 54a present",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "temp_data.payment_scenario", "logic": "MT205_ALWAYS_SERIAL"},
                        {"path": "temp_data.MTType", "logic": "SERIAL"},
                        {"path": "temp_data.translation_target", "logic": "pacs.009.CORE"}
                    ]
                }
            }
        }
    ]
}
