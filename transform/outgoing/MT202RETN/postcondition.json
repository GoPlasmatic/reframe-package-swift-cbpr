{
    "id": "mt202-retn-postcondition",
    "name": "MT202 RETN to pacs.004 Post-condition Validation",
    "description": "Post-condition validation for MT202 RETN to pacs.004 CBPR+ transformation ensuring output compliance",
    "priority": 6,
    "condition": { "and": [
        {"==": [{"var": "metadata.direction"}, "outgoing"]},
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "202"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "return"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt202-retn-document-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "publish_mx_message"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "process_returned_instructed_amount",
            "name": "Process Returned Instructed Amount and Exchange Rate",
            "description": "Create dummy ReturnedInstructedAmount when ChargesInformation or ExchangeRate is present",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.has_charges",
                            "logic": { "and": [
                                {"var": "temp_data.chgs_line"},
                                {"var": "temp_data.chgs_info"}
                            ]}
                        },
                        {
                            "path": "temp_data.has_exchange_rate",
                            "logic": { "or": [
                                {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.XchgRateInf"},
                                {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.XchgRate"}
                            ]}
                        },
                        {
                            "path": "temp_data.dummy_currency",
                            "logic": { "if": [
                                {"var": "temp_data.has_exchange_rate"},
                                { "if": [
                                    {"==": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdIntrBkSttlmAmt.@Ccy"}, "EUR"]},
                                    "USD",
                                    "EUR"
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdInstdAmt",
                            "logic": { "if": [
                                { "or": [
                                    {"var": "temp_data.has_charges"},
                                    {"var": "temp_data.has_exchange_rate"}
                                ]},
                                {
                                    "@Ccy": { "if": [
                                        {"var": "temp_data.dummy_currency"},
                                        {"var": "temp_data.dummy_currency"},
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdIntrBkSttlmAmt.@Ccy"}
                                    ]},
                                    "$value": {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdIntrBkSttlmAmt.$value"}
                                },
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.postc001_warnings",
                            "logic": { "if": [
                                {"var": "temp_data.has_charges"},
                                [
                                    "T20099: Dummy ReturnedInstructedAmount created due to ChargesInformation presence"
                                ],
                                { "if": [
                                    {"var": "temp_data.has_exchange_rate"},
                                    [
                                        "T20100: Dummy currency selected for ReturnedInstructedAmount due to ExchangeRate presence"
                                    ],
                                    []
                                ]}
                            ]}
                        }
                    ],
                    "preserve": true
                }
            }
        },
        {
            "id": "validate_all_postconditions",
            "name": "Validate All Post-conditions",
            "description": "Validate all post-condition requirements for MT202 RETN to pacs.004 transformation",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "temp_data.postcondition_errors", "logic": []},
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrRsnInf"},
                                        { "or": [
                                            {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrRsnInf.Rsn.Cd"},
                                            {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrRsnInf.Rsn.Prtry"}
                                        ]}
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC002: Return reason information must be present with either Cd or Prtry"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.TxSts"},
                                    {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.TxSts"}, "PDNG"]}
                                ]},
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC003: Transaction status must be PDNG for returns"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.GrpHdr.SttlmInf.SttlmMtd"},
                                        {
                                            "in": [
                                                {"var": "data.MxEnvelope.Document.PmtRtr.GrpHdr.SttlmInf.SttlmMtd"},
                                                ["INDA", "INGA", "COVE"]
                                            ]
                                        }
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC004: Settlement method must be INDA, INGA, or COVE"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.InstgAgt.FinInstnId.BICFI"},
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.InstdAgt.FinInstnId.BICFI"},
                                        {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.InstgAgt.FinInstnId.BICFI"}, "NOTPROVIDED"]},
                                        {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.InstdAgt.FinInstnId.BICFI"}, "NOTPROVIDED"]}
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC005: Instructing and Instructed agents must have valid BIC codes"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlUETR"},
                                        {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlUETR"}, "NOTPROVIDED"]}
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC006: Original UETR must be populated with valid value"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdIntrBkSttlmAmt"},
                                        {">": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdIntrBkSttlmAmt.$value"}, 0]},
                                        {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrdIntrBkSttlmAmt.@Ccy"}, ""]}
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC007: Returned amount must have valid currency and positive value"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.InstrForNxtAgt"},
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC008: Instruction for next agent must not be present in returns"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlTxRef.PmtTpInf.ClrChanl"},
                                    {
                                        "!": {
                                            "in": [
                                                {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlTxRef.PmtTpInf.ClrChanl"},
                                                ["RTGS", "MPNS", "RTNS"]
                                            ]
                                        }
                                    }
                                ]},
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC009: Clearing channel must be RTGS, MPNS, RTNS, or not present"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.TxInf.ChrgBr"}, "SHAR"]},
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC010: Charge bearer must be SHAR for CBPR+ returns"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrChain"},
                                        { "or": [
                                            {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrChain.DbtrAgt"},
                                            {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrChain.CdtrAgt"},
                                            {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.RtrChain.Cdtr.Agt"}
                                        ]}
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC011: Return chain must contain at least one agent"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                { "or": [
                                    {"!": {"var": "data.MxEnvelope.AppHdr.BizSvc"}},
                                    {"!=": [{"var": "data.MxEnvelope.AppHdr.BizSvc"}, "swift.cbprplus.02"]},
                                    {"!": {"var": "data.MxEnvelope.AppHdr.MsgDefIdr"}},
                                    {"!=": [{"var": "data.MxEnvelope.AppHdr.MsgDefIdr"}, "pacs.004.001.09"]},
                                    {"!": {"var": "data.MxEnvelope.Document.PmtRtr.GrpHdr.NbOfTxs"}},
                                    {"!=": [{"var": "data.MxEnvelope.Document.PmtRtr.GrpHdr.NbOfTxs"}, "1"]}
                                ]},
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC012: CBPR+ compliance check failed - BizSvc must be swift.cbprplus.02, MsgDefIdr must be pacs.004.001.09, NbOfTxs must be 1"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        },
                        {
                            "path": "temp_data.postcondition_errors",
                            "logic": { "if": [
                                {
                                    "!": { "and": [
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlTxRef"},
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlTxRef.IntrBkSttlmAmt"},
                                        {"var": "data.MxEnvelope.Document.PmtRtr.TxInf.OrgnlTxRef.IntrBkSttlmDt"}
                                    ]}
                                },
                                {
                                    "push": [
                                        {"var": "temp_data.postcondition_errors"},
                                        "POSTC013: Original transaction reference must include settlement amount and date"
                                    ]
                                },
                                {"var": "temp_data.postcondition_errors"}
                            ]}
                        }
                    ],
                    "preserve": true
                }
            }
        },
        {
            "id": "finalize_postcondition",
            "name": "Finalize Post-condition Validation",
            "description": "Set final validation status",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.postcondition_status",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.postcondition_errors"},
                                    {">": [{"length": {"var": "temp_data.postcondition_errors"}}, 0]}
                                ]},
                                "FAILED",
                                "SUCCESS"
                            ]}
                        },
                        {
                            "path": "temp_data.validation_summary",
                            "logic": {
                                "timestamp": "9999-12-31T00:00:00+00:00",
                                "validation_status": {"var": "temp_data.postcondition_status"},
                                "mt202_return_processed": true,
                                "warnings": {"var": "temp_data.postc001_warnings"},
                                "errors": {"var": "temp_data.postcondition_errors"}
                            }
                        }
                    ],
                    "preserve": true
                }
            }
        }
    ]
}
