{
    "id": "mt196-precondition",
    "name": "MT196 Message Precondition",
    "description": "Precondition checks for MT196 resolution message according to specification",
    "priority": 3,
    "condition": { "and": [
        {"==": [{"var": "metadata.direction"}, "outgoing"]},
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "196"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "normal"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt196-bah-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "construct_business_application_header"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "extract_uetr_and_validate_mandatory_fields",
            "name": "Extract UETR and Validate Mandatory Fields",
            "description": "Extract UETR from Block3 or Field 77A, validate mandatory fields (PREC001, PREC003)",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field_77A_concat",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.77A"},
                                    {"var": "data.SwiftMT.fields.77A.narrative"},
                                    {">": [{"length": {"var": "data.SwiftMT.fields.77A.narrative"}}, 0]}
                                ]},
                                { "reduce": [
                                    {"var": "data.SwiftMT.fields.77A.narrative"},
                                    {
                                        "cat": [{"var": "accumulator"}, " ", {"var": "current"}]
                                    },
                                    ""
                                ]},
                                ""
                            ]}
                        },
                        {
                            "path": "temp_data.has_uetr_in_field77A",
                            "logic": { "if": [
                                {"var": "temp_data.field_77A_concat"},
                                {"in": ["/UETR/", {"var": "temp_data.field_77A_concat"}]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.uetr_from_field77A",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.has_uetr_in_field77A"},
                                    {"var": "data.SwiftMT.fields.77A.narrative"},
                                    {">": [{"length": {"var": "data.SwiftMT.fields.77A.narrative"}}, 0]}
                                ]},
                                { "reduce": [
                                    {"var": "data.SwiftMT.fields.77A.narrative"},
                                    { "if": [
                                        {"in": ["/UETR/", {"var": "current"}]},
                                        {"substr": [{"var": "current"}, 6]},
                                        { "if": [
                                            { "and": [
                                                {"starts_with": [{"var": "current"}, "//"]},
                                                {">": [{"length": {"var": "accumulator"}}, 0]}
                                            ]},
                                            {"cat": [{"var": "accumulator"}, {"substr": [{"var": "current"}, 2]}]},
                                            {"var": "accumulator"}
                                        ]}
                                    ]},
                                    ""
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.extracted_uetr",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                {"var": "temp_data.uetr_from_field77A"}
                            ]}
                        },
                        {
                            "path": "temp_data.has_valid_uetr",
                            "logic": {"!!": {"var": "temp_data.extracted_uetr"}}
                        },
                        {
                            "path": "temp_data.prec001_error",
                            "logic": { "if": [
                                {"!": {"var": "temp_data.has_valid_uetr"}},
                                "T20087: UETR is mandatory but missing in Block3 and Field 77A",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.has_mandatory_fields",
                            "logic": { "and": [
                                {"var": "data.SwiftMT.fields.20.reference"},
                                {"var": "data.SwiftMT.fields.21.reference"},
                                {"var": "data.SwiftMT.fields.76.information"},
                                {"!=": [{"var": "data.SwiftMT.fields.20.reference"}, ""]},
                                {"!=": [{"var": "data.SwiftMT.fields.21.reference"}, ""]}
                            ]}
                        },
                        {
                            "path": "temp_data.prec003_error",
                            "logic": { "if": [
                                {"!": {"var": "temp_data.has_mandatory_fields"}},
                                "Mandatory MT196 fields (20, 21, 76) are missing or invalid",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.field77A_remaining_lines",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.77A.narrative"},
                                    {"var": "temp_data.has_uetr_in_field77A"}
                                ]},
                                {
                                    "filter": [
                                        {"var": "data.SwiftMT.fields.77A.narrative"},
                                        { "and": [
                                            {"!": {"in": ["/UETR/", {"var": ""}]}},
                                            {"!": {"starts_with": [{"var": ""}, "//"]}}
                                        ]}
                                    ]
                                },
                                {"var": "data.SwiftMT.fields.77A.narrative"}
                            ]}
                        },
                        {
                            "path": "warnings",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.field77A_remaining_lines"},
                                    {">": [{"length": {"var": "temp_data.field77A_remaining_lines"}}, 0]}
                                ]},
                                [
                                    "T20094: Field 77A contains additional information after UETR extraction that will not be translated"
                                ],
                                []
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "process_field76_and_extract_details",
            "name": "Process Field 76 and Extract Cancellation Details",
            "description": "Validate Field 76 cancellation patterns (PREC002) and extract status code, reason code, and additional info",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field76_first_line",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.76.information"},
                                    {">": [{"length": {"var": "data.SwiftMT.fields.76.information"}}, 0]}
                                ]},
                                {"var": "data.SwiftMT.fields.76.information.0"},
                                ""
                            ]}
                        },
                        {
                            "path": "temp_data.has_valid_status",
                            "logic": { "if": [
                                {"var": "temp_data.field76_first_line"},
                                { "or": [
                                    {"starts_with": [{"var": "temp_data.field76_first_line"}, "/CNCL/"]},
                                    {"starts_with": [{"var": "temp_data.field76_first_line"}, "/PDCR/"]},
                                    {"starts_with": [{"var": "temp_data.field76_first_line"}, "/RJCR/"]},
                                    {"starts_with": [{"var": "temp_data.field76_first_line"}, "/CUST/"]}
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.prec002_error",
                            "logic": { "if": [
                                {"!": {"var": "temp_data.has_valid_status"}},
                                "T20093: Field 76 Line 1 must contain /CNCL/, /PDCR/, /RJCR/, or /CUST/ pattern",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.status_code",
                            "logic": { "if": [
                                {"starts_with": [{"var": "temp_data.field76_first_line"}, "/CNCL/"]},
                                "CNCL",
                                { "if": [
                                    {"starts_with": [{"var": "temp_data.field76_first_line"}, "/PDCR/"]},
                                    "PDCR",
                                    { "if": [
                                        {"starts_with": [{"var": "temp_data.field76_first_line"}, "/RJCR/"]},
                                        "RJCR",
                                        { "if": [
                                            {"starts_with": [{"var": "temp_data.field76_first_line"}, "/CUST/"]},
                                            "CUST",
                                            "CNCL"
                                        ]}
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.field76_has_arpl",
                            "logic": { "if": [
                                {"var": "temp_data.field76_first_line"},
                                { "and": [
                                    {">": [{"length": {"var": "temp_data.field76_first_line"}}, 10]},
                                    {"==": [{"substr": [{"var": "temp_data.field76_first_line"}, 6, 4]}, "ARPL"]}
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field76_reason_code_raw",
                            "logic": { "if": [
                                {"var": "temp_data.field76_first_line"},
                                {"substr": [{"var": "temp_data.field76_first_line"}, 6]},
                                ""
                            ]}
                        },
                        {
                            "path": "temp_data.field76_reason_code",
                            "logic": { "if": [
                                {"var": "temp_data.field76_has_arpl"},
                                {"substr": [{"var": "temp_data.field76_reason_code_raw"}, 4]},
                                {"var": "temp_data.field76_reason_code_raw"}
                            ]}
                        },
                        {
                            "path": "temp_data.field76_additional_info",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.76.information"},
                                    {">": [{"length": {"var": "data.SwiftMT.fields.76.information"}}, 1]}
                                ]},
                                { "reduce": [
                                    {"slice": [{"var": "data.SwiftMT.fields.76.information"}, 1]},
                                    {
                                        "cat": [{"var": "accumulator"}, " ", {"var": "current"}]
                                    },
                                    ""
                                ]},
                                {"var": "temp_data.field76_reason_code"}
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "process_field11_and_message_type_translation",
            "name": "Process Field 11 and Implement TR003 Message Type Translation",
            "description": "Extract Field 11 details and implement TR003 logic for MT type to MX type conversion",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field11_date",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.11.date"},
                                {"var": "data.SwiftMT.fields.11.date"},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.field11_mt_type",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.11.message_type"},
                                {"var": "data.SwiftMT.fields.11.message_type"},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.original_mx_type",
                            "logic": { "if": [
                                {"var": "temp_data.field11_mt_type"},
                                { "if": [
                                    {"==": [{"var": "temp_data.field11_mt_type"}, "103"]},
                                    "pacs.008.001.08",
                                    { "if": [
                                        {"==": [{"var": "temp_data.field11_mt_type"}, "104"]},
                                        "pacs.003.001.08",
                                        { "if": [
                                            { "or": [
                                                {"==": [{"var": "temp_data.field11_mt_type"}, "202"]},
                                                {"==": [{"var": "temp_data.field11_mt_type"}, "205"]}
                                            ]},
                                            "pacs.009.001.08",
                                            { "if": [
                                                {"==": [{"var": "temp_data.field11_mt_type"}, "204"]},
                                                "pacs.010.001.03",
                                                { "if": [
                                                    { "and": [
                                                        {">=": [{"length": {"var": "temp_data.field11_mt_type"}}, 3]},
                                                        {"==": [{"substr": [{"var": "temp_data.field11_mt_type"}, 0, 2]}, "10"]}
                                                    ]},
                                                    {"cat": ["MT", {"var": "temp_data.field11_mt_type"}]},
                                                    { "if": [
                                                        { "and": [
                                                            {">=": [{"length": {"var": "temp_data.field11_mt_type"}}, 3]},
                                                            {"==": [{"substr": [{"var": "temp_data.field11_mt_type"}, 0, 2]}, "20"]}
                                                        ]},
                                                        {"cat": ["MT", {"var": "temp_data.field11_mt_type"}]},
                                                        {"cat": ["MT", {"var": "temp_data.field11_mt_type"}]}
                                                    ]}
                                                ]}
                                            ]}
                                        ]}
                                    ]}
                                ]},
                                "NOTPROVIDED"
                            ]}
                        },
                        {
                            "path": "temp_data.tr003_warning",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.field11_mt_type"},
                                    {
                                        "!": {
                                            "in": [
                                                {"var": "temp_data.field11_mt_type"},
                                                ["103", "104", "202", "204", "205"]
                                            ]
                                        }
                                    }
                                ]},
                                {
                                    "cat": [
                                        "T20089: Message type ",
                                        {"var": "temp_data.field11_mt_type"},
                                        " not explicitly mapped, using default MT format"
                                    ]
                                },
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.original_date_formatted",
                            "logic": { "if": [
                                {"var": "temp_data.field11_date"},
                                {
                                    "cat": [
                                        { "if": [
                                            {">": [{"substr": [{"var": "temp_data.field11_date"}, 0, 2]}, "50"]},
                                            "19",
                                            "20"
                                        ]},
                                        {
                                            "substr": [{"var": "temp_data.field11_date"}, 0, 2]
                                        },
                                        "-",
                                        {
                                            "substr": [{"var": "temp_data.field11_date"}, 2, 2]
                                        },
                                        "-",
                                        {
                                            "substr": [{"var": "temp_data.field11_date"}, 4, 2]
                                        },
                                        "T00:00:00+00:00"
                                    ]
                                },
                                {
                                    "cat": [
                                        {
                                            "substr": [{"var": "data.MxEnvelope.AppHdr.CreDt"}, 0, 10]
                                        },
                                        "T00:00:00+00:00"
                                    ]
                                }
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "validate_all_preconditions",
            "name": "Validate All Preconditions",
            "description": "Validate PREC001 (UETR), PREC002 (Field 76), and PREC003 (Mandatory fields)",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.validation_passed",
                            "logic": { "and": [
                                {"!": {"var": "temp_data.prec001_error"}},
                                {"!": {"var": "temp_data.prec002_error"}},
                                {"!": {"var": "temp_data.prec003_error"}}
                            ]}
                        },
                        {
                            "path": "temp_data.validation_error",
                            "logic": { "if": [
                                {"var": "temp_data.prec001_error"},
                                {"var": "temp_data.prec001_error"},
                                { "if": [
                                    {"var": "temp_data.prec002_error"},
                                    {"var": "temp_data.prec002_error"},
                                    { "if": [
                                        {"var": "temp_data.prec003_error"},
                                        {"var": "temp_data.prec003_error"},
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "errors",
                            "logic": { "if": [
                                {"var": "temp_data.validation_error"},
                                [{"var": "temp_data.validation_error"}],
                                []
                            ]}
                        }
                    ]
                }
            }
        }
    ]
}
