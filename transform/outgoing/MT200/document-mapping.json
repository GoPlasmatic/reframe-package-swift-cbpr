{
    "id": "mt200-document-mapper",
    "name": "MT200 to pacs.009 Document Mapping for CBPR+",
    "description": "Maps MT200 FI Transfer for Own Account message to ISO 20022 pacs.009.001.08 FinancialInstitutionCreditTransferV08 document structure according to CBPR+ translation specification",
    "priority": 4,
    "condition": { "and": [
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "200"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt200-precondition"]},
        {"==": [{"var": "metadata.progress.task_id"}, "determine_clearing_and_settlement"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "determine_settlement_method",
            "name": "Determine Settlement Method",
            "description": "Determines settlement method based on field 53B presence and account indicator for MT200",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "temp_data.Sender", "logic": {"var": "temp_data.Sender"}},
                        {"path": "temp_data.Receiver", "logic": {"var": "temp_data.Receiver"}},
                        {
                            "path": "temp_data.UETR",
                            "logic": {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"}
                        },
                        {
                            "path": "temp_data.settlement_method",
                            "logic": { "if": [
                                {"!": {"var": "data.SwiftMT.fields.53.B"}},
                                "INDA",
                                { "if": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.53.B.party_identifier"},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, "/C"]}
                                    ]},
                                    "INGA",
                                    "INDA"
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.settlement_account",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.53.B.party_identifier"},
                                { "if": [
                                    {"starts_with": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, "/"]},
                                    {"substr": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, 1]},
                                    null
                                ]},
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "construct_group_header",
            "name": "Construct Group Header",
            "description": "Builds pacs.009 group header with message identification, creation timestamp, and settlement information from MT200 fields",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "data.MxEnvelope.Document.FICdtTrf.GrpHdr", "logic": {}},
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.GrpHdr",
                            "logic": {
                                "MsgId": { "if": [
                                    {"var": "data.SwiftMT.fields.20.reference"},
                                    {"var": "data.SwiftMT.fields.20.reference"},
                                    "NOTPROVIDED"
                                ]},
                                "CreDtTm": { "if": [
                                    {"var": "data.SwiftMT.fields.32A.value_date"},
                                    {"cat": [{"var": "data.SwiftMT.fields.32A.value_date"}, "T00:00:00+00:00"]},
                                    "9999-12-31T00:00:00+00:00"
                                ]},
                                "NbOfTxs": "1",
                                "SttlmInf": {
                                    "SttlmMtd": {"var": "temp_data.settlement_method"},
                                    "SttlmAcct": { "if": [
                                        {"var": "temp_data.settlement_account"},
                                        {"Id": {"Othr": {"Id": {"var": "temp_data.settlement_account"}}}},
                                        null
                                    ]}
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "id": "construct_credit_transfer_info",
            "name": "Construct Credit Transfer Transaction Information",
            "description": "Maps MT200 fields to pacs.009 credit transfer transaction information with special handling for FI Transfer for Own Account where Debtor and Creditor are the same",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf",
                            "logic": {
                                "PmtId": {
                                    "InstrId": { "if": [
                                        {"var": "data.SwiftMT.fields.20.reference"},
                                        {"var": "data.SwiftMT.fields.20.reference"},
                                        "NOTPROVIDED"
                                    ]},
                                    "EndToEndId": { "if": [
                                        {"var": "data.SwiftMT.fields.20.reference"},
                                        {"var": "data.SwiftMT.fields.20.reference"},
                                        "NOTPROVIDED"
                                    ]},
                                    "UETR": { "if": [
                                        {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                        {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                        "00000000-0000-4000-8000-000000000000"
                                    ]}
                                },
                                "PmtTpInf": {
                                    "SvcLvl": { "if": [
                                        {"var": "data.SwiftMT.user_header.service_type_identifier"},
                                        { "if": [
                                            {"match": [{"var": "data.SwiftMT.user_header.service_type_identifier"}, "^00[1-9]$"]},
                                            [
                                                {"Cd": {"cat": ["G", {"var": "data.SwiftMT.user_header.service_type_identifier"}]}}
                                            ],
                                            []
                                        ]},
                                        []
                                    ]},
                                    "ClrChanl": { "if": [
                                        {"var": "temp_data.clearing_channel"},
                                        {"var": "temp_data.clearing_channel"},
                                        null
                                    ]}
                                },
                                "IntrBkSttlmAmt": {
                                    "@Ccy": { "if": [
                                        {"var": "data.SwiftMT.fields.32A.currency"},
                                        {"var": "data.SwiftMT.fields.32A.currency"},
                                        "USD"
                                    ]},
                                    "$value": { "if": [
                                        {"var": "data.SwiftMT.fields.32A.amount"},
                                        {"var": "data.SwiftMT.fields.32A.amount"},
                                        "0"
                                    ]}
                                },
                                "IntrBkSttlmDt": { "if": [
                                    {"var": "data.SwiftMT.fields.32A.value_date"},
                                    {"var": "data.SwiftMT.fields.32A.value_date"},
                                    "9999-12-31"
                                ]},
                                "InstgAgt": {
                                    "FinInstnId": {
                                        "BICFI": { "if": [
                                            {"var": "temp_data.Sender"},
                                            {"var": "temp_data.Sender"},
                                            "NOTPROVIDED"
                                        ]}
                                    }
                                },
                                "InstdAgt": {
                                    "FinInstnId": {
                                        "BICFI": { "if": [
                                            {"var": "temp_data.Receiver"},
                                            {"var": "temp_data.Receiver"},
                                            "NOTPROVIDED"
                                        ]}
                                    }
                                },
                                "Dbtr": {
                                    "FinInstnId": {
                                        "BICFI": { "if": [
                                            {"var": "temp_data.Sender"},
                                            {"var": "temp_data.Sender"},
                                            "NOTPROVIDED"
                                        ]}
                                    }
                                },
                                "Cdtr": {
                                    "FinInstnId": {
                                        "BICFI": { "if": [
                                            {"var": "temp_data.Sender"},
                                            {"var": "temp_data.Sender"},
                                            "NOTPROVIDED"
                                        ]}
                                    }
                                },
                                "CdtrAgt": { "if": [
                                    {"var": "data.SwiftMT.fields.57.A.bic"},
                                    {"FinInstnId": {"BICFI": {"var": "data.SwiftMT.fields.57.A.bic"}}},
                                    null
                                ]}
                            }
                        }
                    ]
                }
            }
        },
        {
            "id": "map_intermediary_agent",
            "name": "Map Intermediary Agent",
            "description": "Maps field 56 (Intermediary) to IntermediaryAgent1 in pacs.009",
            "condition": { "or": [
                {"var": "data.SwiftMT.fields.56.A"},
                {"var": "data.SwiftMT.fields.56.D"}
            ]},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.IntrmyAgt1",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.56.A.bic"},
                                {"FinInstnId": {"BICFI": {"var": "data.SwiftMT.fields.56.A.bic"}}},
                                { "if": [
                                    {"var": "data.SwiftMT.fields.56.D"},
                                    {
                                        "FinInstnId": {
                                            "Nm": { "if": [
                                                {"var": "data.SwiftMT.fields.56.D.name_and_address.0"},
                                                {"var": "data.SwiftMT.fields.56.D.name_and_address.0"},
                                                "NOTPROVIDED"
                                            ]},
                                            "PstlAdr": {
                                                "AdrLine": { "if": [
                                                    {"var": "data.SwiftMT.fields.56.D.name_and_address"},
                                                    {"slice": [{"var": "data.SwiftMT.fields.56.D.name_and_address"}, 1, 5]},
                                                    []
                                                ]}
                                            }
                                        }
                                    },
                                    null
                                ]}
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.IntrmyAgt1Acct",
                            "condition": { "or": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56.A.party_identifier"},
                                    {"!": {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "//"]}}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56.A.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "//CH"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56.D.party_identifier"},
                                    {"!": {"starts_with": [{"var": "data.SwiftMT.fields.56.D.party_identifier"}, "//"]}}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.56.D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.56.D.party_identifier"}, "//CH"]}
                                ]}
                            ]},
                            "logic": {
                                "Id": {
                                    "Othr": {
                                        "Id": { "if": [
                                            {"var": "data.SwiftMT.fields.56.A.party_identifier"},
                                            { "if": [
                                                {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "/"]},
                                                {"substr": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, 1]},
                                                {"var": "data.SwiftMT.fields.56.A.party_identifier"}
                                            ]},
                                            { "if": [
                                                {"var": "data.SwiftMT.fields.56.D.party_identifier"},
                                                { "if": [
                                                    {"starts_with": [{"var": "data.SwiftMT.fields.56.D.party_identifier"}, "/"]},
                                                    {"substr": [{"var": "data.SwiftMT.fields.56.D.party_identifier"}, 1]},
                                                    {"var": "data.SwiftMT.fields.56.D.party_identifier"}
                                                ]},
                                                null
                                            ]}
                                        ]}
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "id": "TR004_map_creditor_agent",
            "name": "TR004: Map Creditor Agent with Complex Address Logic",
            "description": "Maps field 57 to CreditorAgent with AddressLine1Indicator logic per specification",
            "condition": { "or": [
                {"var": "data.SwiftMT.fields.57.A"},
                {"var": "data.SwiftMT.fields.57.B"},
                {"var": "data.SwiftMT.fields.57.D"}
            ]},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.addressLine1Indicator",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.57.B"},
                                { "if": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.57.B.party_identifier"},
                                        {"!": {"starts_with": [{"var": "data.SwiftMT.fields.57.B.party_identifier"}, "//"]}}
                                    ]},
                                    false,
                                    true
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.CdtrAgt",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.57.A.bic"},
                                {"FinInstnId": {"BICFI": {"var": "data.SwiftMT.fields.57.A.bic"}}},
                                { "if": [
                                    {"var": "data.SwiftMT.fields.57.B"},
                                    {
                                        "FinInstnId": {
                                            "Nm": "NOTPROVIDED",
                                            "PstlAdr": {
                                                "AdrLine": { "if": [
                                                    {"var": "temp_data.addressLine1Indicator"},
                                                    { "if": [
                                                        {"var": "data.SwiftMT.fields.57.B.location"},
                                                        [
                                                            {"var": "data.SwiftMT.fields.57.B.party_identifier"},
                                                            {"var": "data.SwiftMT.fields.57.B.location"}
                                                        ],
                                                        [{"var": "data.SwiftMT.fields.57.B.party_identifier"}]
                                                    ]},
                                                    { "if": [
                                                        {"var": "data.SwiftMT.fields.57.B.location"},
                                                        [{"var": "data.SwiftMT.fields.57.B.location"}],
                                                        ["NOTPROVIDED"]
                                                    ]}
                                                ]}
                                            }
                                        }
                                    },
                                    { "if": [
                                        {"var": "data.SwiftMT.fields.57.D"},
                                        {
                                            "FinInstnId": {
                                                "Nm": { "if": [
                                                    {"var": "data.SwiftMT.fields.57.D.name_and_address.0"},
                                                    {"var": "data.SwiftMT.fields.57.D.name_and_address.0"},
                                                    "NOTPROVIDED"
                                                ]},
                                                "PstlAdr": {
                                                    "AdrLine": { "if": [
                                                        {"var": "data.SwiftMT.fields.57.D.name_and_address"},
                                                        {"slice": [{"var": "data.SwiftMT.fields.57.D.name_and_address"}, 1, 5]},
                                                        ["NOTPROVIDED"]
                                                    ]}
                                                }
                                            }
                                        },
                                        null
                                    ]}
                                ]}
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.CdtrAgtAcct",
                            "condition": { "or": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.A.party_identifier"},
                                    {"!": {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "//"]}}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.A.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "//CH"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.B.party_identifier"},
                                    {"!": {"starts_with": [{"var": "data.SwiftMT.fields.57.B.party_identifier"}, "//"]}}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.B.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.57.B.party_identifier"}, "//CH"]}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.D.party_identifier"},
                                    {"!": {"starts_with": [{"var": "data.SwiftMT.fields.57.D.party_identifier"}, "//"]}}
                                ]},
                                { "and": [
                                    {"var": "data.SwiftMT.fields.57.D.party_identifier"},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.57.D.party_identifier"}, "//CH"]}
                                ]}
                            ]},
                            "logic": {
                                "Id": {
                                    "Othr": {
                                        "Id": { "if": [
                                            {"var": "data.SwiftMT.fields.57.A.party_identifier"},
                                            { "if": [
                                                {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "/"]},
                                                {"substr": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, 1]},
                                                {"var": "data.SwiftMT.fields.57.A.party_identifier"}
                                            ]},
                                            { "if": [
                                                {"var": "data.SwiftMT.fields.57.B.party_identifier"},
                                                { "if": [
                                                    {"starts_with": [{"var": "data.SwiftMT.fields.57.B.party_identifier"}, "/"]},
                                                    {"substr": [{"var": "data.SwiftMT.fields.57.B.party_identifier"}, 1]},
                                                    {"var": "data.SwiftMT.fields.57.B.party_identifier"}
                                                ]},
                                                { "if": [
                                                    {"var": "data.SwiftMT.fields.57.D.party_identifier"},
                                                    { "if": [
                                                        {"starts_with": [{"var": "data.SwiftMT.fields.57.D.party_identifier"}, "/"]},
                                                        {"substr": [{"var": "data.SwiftMT.fields.57.D.party_identifier"}, 1]},
                                                        {"var": "data.SwiftMT.fields.57.D.party_identifier"}
                                                    ]},
                                                    null
                                                ]}
                                            ]}
                                        ]}
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "id": "map_field72_new_codes",
            "name": "Map Field 72 New Code Words",
            "description": "Maps new MX-originated codes from field 72 to appropriate pacs.009 fields",
            "condition": {"var": "data.SwiftMT.fields.72"},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl",
                            "condition": {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/SVCLVL/"]},
                            "logic": { "if": [
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/SVCLVL/([^/]+)"]},
                                [
                                    {"Prtry": {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/SVCLVL/([^/]+)", 1]}}
                                ],
                                []
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.LclInstrm",
                            "condition": {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/LOCINS/"]},
                            "logic": { "if": [
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/LOCINS/([^/]+)"]},
                                [
                                    {"Prtry": {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/LOCINS/([^/]+)", 1]}}
                                ],
                                []
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.CtgyPurp",
                            "condition": {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/CATPURP/"]},
                            "logic": { "if": [
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/CATPURP/([^/]+)"]},
                                [
                                    {"Prtry": {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/CATPURP/([^/]+)", 1]}}
                                ],
                                []
                            ]}
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.Purp",
                            "condition": {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/PURP/"]},
                            "logic": { "if": [
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/PURP/([^/]+)"]},
                                [
                                    {"Prtry": {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/PURP/([^/]+)", 1]}}
                                ],
                                []
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "map_sender_to_receiver_info",
            "name": "Map Sender to Receiver Information",
            "description": "Maps field 72 to various instruction fields in pacs.009",
            "condition": {"var": "data.SwiftMT.fields.72"},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.InstrForCdtrAgt",
                            "condition": { "or": [
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/ACC/"]},
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/UDLC/"]},
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/PHONBEN/"]},
                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/TELEBEN/"]}
                            ]},
                            "logic": {
                                "InstrInf": { "if": [
                                    {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/ACC/([^/]+)"]},
                                    {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/ACC/([^/]+)", 1]},
                                    { "if": [
                                        {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/UDLC/([^/]+)"]},
                                        {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/UDLC/([^/]+)", 1]},
                                        { "if": [
                                            {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/PHONBEN/([^/]+)"]},
                                            {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/PHONBEN/([^/]+)", 1]},
                                            { "if": [
                                                {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/TELEBEN/([^/]+)"]},
                                                {"regex_extract": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/TELEBEN/([^/]+)", 1]},
                                                null
                                            ]}
                                        ]}
                                    ]}
                                ]}
                            }
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.RmtInf",
                            "condition": {"regex_match": [{"cat": [{"var": "data.SwiftMT.fields.72.information"}]}, "/BNF/"]},
                            "logic": {
                                "Ustrd": [
                                    { "if": [
                                        {
                                            "regex_match": [
                                                {"cat": [{"var": "data.SwiftMT.fields.72.information"}]},
                                                "/BNF/(.+?)(?=/[A-Z]{3,}|$)"
                                            ]
                                        },
                                        {
                                            "regex_extract": [
                                                {"cat": [{"var": "data.SwiftMT.fields.72.information"}]},
                                                "/BNF/(.+?)(?=/[A-Z]{3,}|$)",
                                                1
                                            ]
                                        },
                                        null
                                    ]}
                                ]
                            }
                        },
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.InstrForNxtAgt",
                            "condition": {"var": "temp_data.field72_truncated"},
                            "logic": { "if": [
                                {"var": "temp_data.field72_truncated"},
                                {
                                    "filter": [
                                        {
                                            "map": [
                                                [0, 1, 2, 3, 4, 5],
                                                { "if": [
                                                    {"<": [{"*": [{"var": ""}, 35]}, {"length": {"var": "temp_data.field72_truncated"}}]},
                                                    {
                                                        "InstrInf": {
                                                            "substr": [{"var": "temp_data.field72_truncated"}, {"*": [{"var": ""}, 35]}, 35]
                                                        }
                                                    },
                                                    null
                                                ]}
                                            ]
                                        },
                                        {"var": ""}
                                    ]
                                },
                                []
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "publish_mx_message",
            "name": "Publish MX Message",
            "description": "Publish the complete MX message with AppHdr and Document",
            "function": {"name": "publish_mx", "input": {"source": "MxEnvelope", "target": "result"}}
        }
    ]
}
