{
    "id": "mt200-precondition",
    "name": "MT200 to pacs.009 Precondition Validation",
    "description": "Validates MT200 messages against CBPR+ requirements for FI Transfer for Own Account before transformation to pacs.009.001.08",
    "priority": 3,
    "condition": { "and": [
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "200"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt200-bah-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "construct_business_application_header"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "initialize_context_and_validate",
            "name": "Initialize Context and Validate Core Fields",
            "description": "Sets up global variables and validates mandatory fields, UETR, and rejection/return indicators",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.Sender",
                            "logic": { "if": [
                                {"var": "data.MxEnvelope.AppHdr.Fr.FIId.FinInstnId.BICFI"},
                                {"var": "data.MxEnvelope.AppHdr.Fr.FIId.FinInstnId.BICFI"},
                                {"var": "temp_data.Sender"}
                            ]}
                        },
                        {
                            "path": "temp_data.Receiver",
                            "logic": { "if": [
                                {"var": "data.MxEnvelope.AppHdr.To.FIId.FinInstnId.BICFI"},
                                {"var": "data.MxEnvelope.AppHdr.To.FIId.FinInstnId.BICFI"},
                                {"var": "temp_data.Receiver"}
                            ]}
                        },
                        {
                            "path": "temp_data.has_rejt_retn",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                { "or": [
                                    {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/REJT/"]},
                                    {"starts_with": [{"var": "data.SwiftMT.fields.72.information.0"}, "/RETN/"]}
                                ]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.has_valid_uetr",
                            "logic": { "and": [
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                {">=": [{"length": {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"}}, 36]}
                            ]}
                        },
                        {
                            "path": "temp_data.has_mandatory_fields",
                            "logic": { "and": [
                                {"var": "data.SwiftMT.fields.20.reference"},
                                {"var": "data.SwiftMT.fields.32A.value_date"},
                                {"var": "data.SwiftMT.fields.32A.currency"},
                                {"var": "data.SwiftMT.fields.32A.amount"}
                            ]}
                        },
                        {
                            "path": "errors",
                            "logic": { "if": [
                                {"var": "temp_data.has_rejt_retn"},
                                [
                                    "T20063: Field 72 cannot start with /REJT/ or /RETN/ for MT200 FI Transfer for Own Account"
                                ],
                                { "if": [
                                    {"!": {"var": "temp_data.has_valid_uetr"}},
                                    [
                                        "T20087: UETR is mandatory in Block3 for CBPR+ pacs.009 and must be a valid UUID v4"
                                    ],
                                    { "if": [
                                        {"!": {"var": "temp_data.has_mandatory_fields"}},
                                        ["Missing mandatory MT200 fields (20, 32A)"],
                                        []
                                    ]}
                                ]}
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "determine_clearing_and_settlement",
            "name": "Determine Clearing Channel and Settlement Method",
            "description": "Detects RTGS clearing channel and determines settlement method based on field 53B",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.clearing_channel",
                            "logic": { "if": [
                                { "or": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.56.A.party_identifier"},
                                        { "or": [
                                            {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "//RT"]},
                                            {"starts_with": [{"var": "data.SwiftMT.fields.56.A.party_identifier"}, "//FW"]}
                                        ]}
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.56.D.party_identifier"},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.56.D.party_identifier"}, "//RT"]}
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.57.A.party_identifier"},
                                        { "or": [
                                            {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "//RT"]},
                                            {"starts_with": [{"var": "data.SwiftMT.fields.57.A.party_identifier"}, "//FW"]}
                                        ]}
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.57.D.party_identifier"},
                                        {"starts_with": [{"var": "data.SwiftMT.fields.57.D.party_identifier"}, "//RT"]}
                                    ]}
                                ]},
                                "RTGS",
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.field53b_is_account",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.53.B.party_identifier"},
                                {"starts_with": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, "/"]},
                                false
                            ]}
                        },
                        {
                            "path": "temp_data.field53b_account_indicator",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "temp_data.field53b_is_account"},
                                    {">": [{"length": {"var": "data.SwiftMT.fields.53.B.party_identifier"}}, 2]}
                                ]},
                                {
                                    "substr": [{"var": "data.SwiftMT.fields.53.B.party_identifier"}, 1, 1]
                                },
                                null
                            ]}
                        },
                        {
                            "path": "warnings",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.SwiftMT.fields.53.B"},
                                    {"var": "data.SwiftMT.fields.53.B.location"},
                                    {"var": "temp_data.field53b_is_account"}
                                ]},
                                ["T20070: Field 53B Location present with account - no translation possible"],
                                { "if": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.53.B"},
                                        {"!": {"var": "temp_data.field53b_is_account"}}
                                    ]},
                                    ["T20001: Field 53B PartyIdentifier is not an account - field not translated"],
                                    []
                                ]}
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "TR005_field72_code_extraction",
            "name": "TR005: Extract and Process Field 72 Codes",
            "description": "Extracts codes from Field 72 and prepares them for InstructionForNextAgent with prioritization",
            "condition": {"var": "data.SwiftMT.fields.72"},
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field72_codes",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                {
                                    "filter": [
                                        {
                                            "map": [
                                                ["REC", "TELE", "INT", "PHON", "PHONIBK", "TELEIBK", "INS"],
                                                { "if": [
                                                    {
                                                        "regex_match": [
                                                            {"cat": [{"var": "data.SwiftMT.fields.72.information"}]},
                                                            {
                                                                "cat": ["/", {"var": ""}, "/"]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "code": {"var": ""},
                                                        "value": {
                                                            "regex_extract": [
                                                                {"cat": [{"var": "data.SwiftMT.fields.72.information"}]},
                                                                {
                                                                    "cat": ["/", {"var": ""}, "/([^/]+)"]
                                                                },
                                                                1
                                                            ]
                                                        }
                                                    },
                                                    null
                                                ]}
                                            ]
                                        },
                                        {"var": ""}
                                    ]
                                },
                                []
                            ]}
                        },
                        {
                            "path": "temp_data.field72_instruction_string",
                            "logic": { "if": [
                                {"var": "temp_data.field72_codes"},
                                { "reduce": [
                                    {"var": "temp_data.field72_codes"},
                                    {
                                        "cat": [
                                            {"var": "accumulator"},
                                            { "if": [
                                                {"var": "accumulator"},
                                                " ",
                                                ""
                                            ]},
                                            "/",
                                            {"var": "current.code"},
                                            "/",
                                            {"var": "current.value"}
                                        ]
                                    },
                                    ""
                                ]},
                                { "if": [
                                    {"var": "data.SwiftMT.fields.72.information"},
                                    {
                                        "regex_replace": [
                                            {"cat": [{"var": "data.SwiftMT.fields.72.information"}]},
                                            "/(ACC|UDLC|INS|BNF|TSU|PHONBEN|TELEBEN|INTA|SVCLVL|LOCINS|CATPURP|PURP)/[^/]+/?",
                                            ""
                                        ]
                                    },
                                    ""
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.field72_truncated",
                            "logic": { "if": [
                                {"var": "temp_data.field72_instruction_string"},
                                { "if": [
                                    {">": [{"length": {"var": "temp_data.field72_instruction_string"}}, 210]},
                                    {
                                        "cat": [
                                            {
                                                "substr": [{"var": "temp_data.field72_instruction_string"}, 0, 209]
                                            },
                                            "+"
                                        ]
                                    },
                                    {"var": "temp_data.field72_instruction_string"}
                                ]},
                                null
                            ]}
                        }
                    ]
                }
            }
        }
    ]
}
