{
    "id": "mt200-postcondition",
    "name": "MT200 to pacs.009 Postcondition Validation",
    "description": "CBPR+ postcondition validation for MT200 to pacs.009 transformation ensuring compliance and data integrity",
    "priority": 5,
    "condition": { "and": [
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "200"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "combine-header-document-xml"]},
        {"==": [{"var": "metadata.progress.task_id"}, "combine_xml_strings"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "validate_mandatory_fields_and_mappings",
            "name": "Validate Mandatory Fields and Core Mappings",
            "description": "Validates all mandatory pacs.009 fields, UETR mapping, own account transfer, and agent mappings (POSTC001-004)",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.Document.FIToFICdtTrf.GrpHdr",
                            "logic": { "and": [
                                {"var": "MsgId"},
                                {"var": "CreDtTm"},
                                {"==": [{"var": "NbOfTxs"}, "1"]},
                                {"var": "SttlmInf.SttlmMtd"}
                            ]},
                            "message": "POSTC001: Missing mandatory Group Header fields in pacs.009"
                        },
                        {
                            "path": "data.Document.FIToFICdtTrf.CdtTrfTxInf",
                            "logic": { "and": [
                                {"var": "PmtId.InstrId"},
                                {"var": "PmtId.EndToEndId"},
                                {"var": "PmtId.UETR"},
                                {"var": "IntrBkSttlmAmt"},
                                {"var": "IntrBkSttlmDt"}
                            ]},
                            "message": "POSTC001: Missing mandatory Credit Transfer Transaction Information fields"
                        },
                        {
                            "path": "data",
                            "logic": { "and": [
                                {"var": "SwiftMT.user_header.unique_end_to_end_reference"},
                                {"==": [{"var": "Document.FIToFICdtTrf.CdtTrfTxInf.PmtId.UETR"}, {"var": "SwiftMT.user_header.unique_end_to_end_reference"}]}
                            ]},
                            "message": "POSTC002: UETR not properly mapped from Block3 to PaymentIdentification"
                        },
                        {
                            "path": "data.Document.FIToFICdtTrf.CdtTrfTxInf",
                            "logic": { "and": [
                                {"var": "Dbtr.FinInstnId.BICFI"},
                                {"var": "Cdtr.FinInstnId.BICFI"},
                                {"==": [{"var": "Dbtr.FinInstnId.BICFI"}, {"var": "Cdtr.FinInstnId.BICFI"}]},
                                {"==": [{"var": "Dbtr.FinInstnId.BICFI"}, {"var": "data.temp_data.Sender"}]}
                            ]},
                            "message": "POSTC003: For MT200 Own Account Transfer, Debtor and Creditor must be the same (Sender)"
                        },
                        {
                            "path": "data.Document.FIToFICdtTrf.CdtTrfTxInf",
                            "logic": { "and": [
                                {"==": [{"var": "InstgAgt.FinInstnId.BICFI"}, {"var": "data.temp_data.Sender"}]},
                                {"==": [{"var": "InstdAgt.FinInstnId.BICFI"}, {"var": "data.temp_data.Receiver"}]}
                            ]},
                            "message": "POSTC004: InstructingAgent and InstructedAgent not properly mapped from Sender/Receiver"
                        }
                    ]
                }
            }
        },
        {
            "id": "validate_settlement_and_payment_type",
            "name": "Validate Settlement Method and Payment Type Information",
            "description": "Validates settlement method, service level code, and clearing channel (POSTC005-007)",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "SwiftMT.fields.53.B"},
                                { "if": [
                                    {"var": "temp_data.field53b_is_account"},
                                    { "if": [
                                        {"==": [{"var": "temp_data.field53b_account_indicator"}, "C"]},
                                        {"==": [{"var": "Document.FIToFICdtTrf.GrpHdr.SttlmInf.SttlmMtd"}, "INGA"]},
                                        {"==": [{"var": "Document.FIToFICdtTrf.GrpHdr.SttlmInf.SttlmMtd"}, "INDA"]}
                                    ]},
                                    {"==": [{"var": "Document.FIToFICdtTrf.GrpHdr.SttlmInf.SttlmMtd"}, "INDA"]}
                                ]},
                                {"==": [{"var": "Document.FIToFICdtTrf.GrpHdr.SttlmInf.SttlmMtd"}, "INDA"]}
                            ]},
                            "message": "POSTC005: Settlement method not correctly determined from Field 53B"
                        },
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "SwiftMT.user_header.service_type_identifier"},
                                { "if": [
                                    {"match": [{"var": "SwiftMT.user_header.service_type_identifier"}, "^00[1-9]$"]},
                                    {"==": [{"var": "Document.FIToFICdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl.Cd"}, {"cat": ["G", {"var": "SwiftMT.user_header.service_type_identifier"}]}]},
                                    true
                                ]},
                                true
                            ]},
                            "message": "POSTC006: Service level code not properly transformed from Block3 ServiceTypeIdentifier"
                        },
                        {
                            "path": "data",
                            "logic": { "if": [
                                { "or": [
                                    { "and": [
                                        {"var": "SwiftMT.fields.56.A.party_identifier"},
                                        { "or": [
                                            {"starts_with": [{"var": "SwiftMT.fields.56.A.party_identifier"}, "//RT"]},
                                            {"starts_with": [{"var": "SwiftMT.fields.56.A.party_identifier"}, "//FW"]}
                                        ]}
                                    ]},
                                    { "and": [
                                        {"var": "SwiftMT.fields.57.A.party_identifier"},
                                        { "or": [
                                            {"starts_with": [{"var": "SwiftMT.fields.57.A.party_identifier"}, "//RT"]},
                                            {"starts_with": [{"var": "SwiftMT.fields.57.A.party_identifier"}, "//FW"]}
                                        ]}
                                    ]}
                                ]},
                                {"==": [{"var": "Document.FIToFICdtTrf.CdtTrfTxInf.PmtTpInf.ClrChanl"}, "RTGS"]},
                                true
                            ]},
                            "message": "POSTC007: Clearing channel not properly set to RTGS when //RT or //FW present"
                        }
                    ]
                }
            }
        },
        {
            "id": "validate_compliance_and_formatting",
            "name": "Validate CBPR+ Compliance and Data Formatting",
            "description": "Validates amount mapping, CBPR+ compliance, and date formatting (POSTC008-010)",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "and": [
                                {"==": [{"var": "Document.FIToFICdtTrf.CdtTrfTxInf.IntrBkSttlmAmt.@Ccy"}, {"var": "SwiftMT.fields.32A.currency"}]},
                                {"==": [{"var": "Document.FIToFICdtTrf.CdtTrfTxInf.IntrBkSttlmAmt.$value"}, {"var": "SwiftMT.fields.32A.amount"}]}
                            ]},
                            "message": "POSTC008: Amount and currency from Field 32A not properly mapped"
                        },
                        {
                            "path": "data",
                            "logic": { "and": [
                                {"==": [{"var": "AppHdr.BizSvc"}, "swift.cbprplus.02"]},
                                {"==": [{"var": "AppHdr.MsgDefIdr"}, "pacs.009.001.08"]}
                            ]},
                            "message": "POSTC009: Invalid CBPR+ service or message definition identifier"
                        },
                        {
                            "path": "data.Document.FIToFICdtTrf",
                            "logic": { "and": [
                                {
                                    "match": [
                                        {"var": "GrpHdr.CreDtTm"},
                                        "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[+-]\\d{2}:\\d{2}$"
                                    ]
                                },
                                {"match": [{"var": "CdtTrfTxInf.IntrBkSttlmDt"}, "^\\d{4}-\\d{2}-\\d{2}$"]}
                            ]},
                            "message": "POSTC010: Date/time fields not properly formatted to ISO standard"
                        }
                    ]
                }
            }
        }
    ]
}
