{
    "id": "mt205cov-postcondition",
    "name": "MT205 COV to pacs.009 ADV Post-condition Validation",
    "description": "Post-condition validation for MT205 COV to pacs.009 ADV CBPR+ transformation ensuring output compliance",
    "priority": 6,
    "condition": { "and": [
        {"==": [{"var": "metadata.direction"}, "outgoing"]},
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "205"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "cover"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt205cov-document-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "publish_mx_message"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "POSTC001_validate_settlement_method",
            "name": "POSTC001: Validate Settlement Method",
            "description": "Ensure settlement method is correctly set based on METAFCT003 logic for MT205 COV",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.GrpHdr.SttlmInf",
                            "logic": { "and": [
                                {"var": "data.MxEnvelope.Document.FICdtTrf.GrpHdr.SttlmInf.SttlmMtd"},
                                {
                                    "in": [
                                        {"var": "data.MxEnvelope.Document.FICdtTrf.GrpHdr.SttlmInf.SttlmMtd"},
                                        ["INDA", "INGA"]
                                    ]
                                }
                            ]},
                            "message": "T20070: Settlement method must be either INDA or INGA for MT205 COV"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC002_validate_required_fields",
            "name": "POSTC002: Validate Required Fields",
            "description": "Ensure all required fields are present in the pacs.009 ADV output",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf",
                            "logic": { "and": [
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "GrpHdr", "MsgId"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "GrpHdr", "CreDtTm"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "GrpHdr", "NbOfTxs"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "PmtId", "InstrId"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "IntrBkSttlmAmt"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "InstgAgt"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "InstdAgt"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "Dbtr"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "Cdtr"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "UndrlygCstmrCdtTrf"]}
                            ]},
                            "message": "T20071: Required fields are missing in the pacs.009 ADV output"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC003_validate_mandatory_field_52a",
            "name": "POSTC003: Validate Mandatory Field 52a Mapping",
            "description": "Ensure mandatory field 52a is properly mapped in the output",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf",
                            "logic": { "and": [
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "Dbtr"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "Dbtr", "FinInstnId"]},
                                {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "Dbtr", "FinInstnId", "BICFI"]}
                            ]},
                            "message": "T20072: Mandatory field 52a (Ordering Institution) not properly mapped for MT205 COV"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC004_validate_no_field_54a",
            "name": "POSTC004: Validate No Field 54a in MT205",
            "description": "Ensure no field 54a related mappings exist as MT205 does not have field 54a",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "temp_data",
                            "logic": {"!": {"var": "temp_data.instruction_for_next_agent_fin54"}},
                            "message": "T20073: MT205 should not have field 54a related mappings"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC005_validate_metafct003_consistency",
            "name": "POSTC005: Validate METAFCT003 Consistency",
            "description": "Validate that METAFCT003 logic is properly applied for MT205 COV (Tables 1-2 only)",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf",
                            "logic": { "if": [
                                {"==": [{"var": "temp_data.settlement_method"}, "INGA"]},
                                { "and": [
                                    {"var": "data.MxEnvelope.Document.FICdtTrf.GrpHdr.SttlmInf.SttlmAcct"},
                                    {"var": "temp_data.instructing_reimbursement_agent_bic"}
                                ]},
                                true
                            ]},
                            "message": "T20074: INGA settlement method requires settlement account and instructing reimbursement agent for MT205 COV"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC006_validate_clearing_channel",
            "name": "POSTC006: Validate Clearing Channel",
            "description": "Ensure clearing channel is set to RTGS when required identifiers are present",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf",
                            "logic": { "if": [
                                { "or": [
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.52A.party_identifier"},
                                        {
                                            "in": [
                                                {
                                                    "substr": [{"var": "data.SwiftMT.fields.52A.party_identifier"}, 0, 4]
                                                },
                                                ["//RT", "//FW"]
                                            ]
                                        }
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.53A.party_identifier"},
                                        {
                                            "in": [
                                                {
                                                    "substr": [{"var": "data.SwiftMT.fields.53A.party_identifier"}, 0, 4]
                                                },
                                                ["//RT", "//FW"]
                                            ]
                                        }
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.56A.party_identifier"},
                                        {
                                            "in": [
                                                {
                                                    "substr": [{"var": "data.SwiftMT.fields.56A.party_identifier"}, 0, 4]
                                                },
                                                ["//RT", "//FW"]
                                            ]
                                        }
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.57A.party_identifier"},
                                        {
                                            "in": [
                                                {
                                                    "substr": [{"var": "data.SwiftMT.fields.57A.party_identifier"}, 0, 4]
                                                },
                                                ["//RT", "//FW"]
                                            ]
                                        }
                                    ]},
                                    { "and": [
                                        {"var": "data.SwiftMT.fields.58A.party_identifier"},
                                        {
                                            "in": [
                                                {
                                                    "substr": [{"var": "data.SwiftMT.fields.58A.party_identifier"}, 0, 4]
                                                },
                                                ["//RT", "//FW"]
                                            ]
                                        }
                                    ]}
                                ]},
                                {"==": [{"var": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.ClrChanl"}, "RTGS"]},
                                true
                            ]},
                            "message": "T20075: Clearing channel should be RTGS when RT or FW identifiers are present"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC007_validate_cbpr_compliance",
            "name": "POSTC007: Validate CBPR+ Compliance",
            "description": "Ensure CBPR+ specific requirements are met",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.AppHdr",
                            "logic": { "and": [
                                {"var": "data.MxEnvelope.AppHdr.BizSvc"},
                                {"==": [{"var": "data.MxEnvelope.AppHdr.BizSvc"}, "swift.cbprplus.02"]},
                                {"var": "data.MxEnvelope.AppHdr.MsgDefIdr"},
                                {"==": [{"var": "data.MxEnvelope.AppHdr.MsgDefIdr"}, "pacs.009.001.08"]}
                            ]},
                            "message": "POSTC007: Message does not meet CBPR+ compliance requirements"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC008_validate_sequence_b_mapping",
            "name": "POSTC008: Validate Sequence B Mapping",
            "description": "Ensure sequence B (underlying customer credit transfer) is properly mapped when present",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "temp_data.has_sequence_b"},
                                { "and": [
                                    {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "UndrlygCstmrCdtTrf"]},
                                    { "or": [
                                        {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "UndrlygCstmrCdtTrf", "Dbtr"]},
                                        {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "UndrlygCstmrCdtTrf", "UltmtDbtr"]}
                                    ]},
                                    { "or": [
                                        {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "UndrlygCstmrCdtTrf", "Cdtr"]},
                                        {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "UndrlygCstmrCdtTrf", "UltmtCdtr"]}
                                    ]}
                                ]},
                                true
                            ]},
                            "message": "POSTC008: Sequence B fields present but not properly mapped to underlying customer credit transfer"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC009_validate_reimbursement_agents",
            "name": "POSTC009: Validate Reimbursement Agents",
            "description": "Ensure reimbursement agents are properly mapped for serial payments",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "temp_data.has_reimbursement_agents"},
                                { "or": [
                                    {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "InstgRmbrsmntAgt"]},
                                    {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "InstdRmbrsmntAgt"]},
                                    {"exists": ["data", "MxEnvelope", "Document", "FICdtTrf", "CdtTrfTxInf", "ThrdRmbrsmntAgt"]}
                                ]},
                                true
                            ]},
                            "message": "POSTC009: Serial payment reimbursement agents not properly mapped"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC010_validate_service_level",
            "name": "POSTC010: Validate Service Level",
            "description": "Ensure service level codes are properly generated from TR002",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.SwiftMT.user_header.service_type_identifier"},
                                    {"match": [{"var": "data.SwiftMT.user_header.service_type_identifier"}, "^00[1-9]$"]}
                                ]},
                                { "and": [
                                    {"var": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl"},
                                    {">": [{"length": {"var": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl"}}, 0]},
                                    {"==": [{"var": "data.MxEnvelope.Document.FICdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl.0.Cd"}, {"cat": ["G", {"var": "data.SwiftMT.user_header.service_type_identifier"}]}]}
                                ]},
                                true
                            ]},
                            "message": "T20076: Service level code not properly generated from service type identifier"
                        }
                    ]
                }
            }
        },
        {
            "id": "set_postcondition_success",
            "name": "Set Post-condition Success",
            "description": "Mark post-condition validation as successful",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {"path": "temp_data.postcondition_validation", "logic": "SUCCESS"},
                        {"path": "temp_data.mt205cov_compliance_version", "logic": "1.0.0"}
                    ]
                }
            }
        }
    ]
}
