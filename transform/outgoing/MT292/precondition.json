{
    "id": "mt292-precondition",
    "name": "MT292 Message Precondition",
    "description": "Precondition checks for MT292 request for cancellation message",
    "priority": 3,
    "condition": { "and": [
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "292"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "normal"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt292-bah-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "construct_business_application_header"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "extract_and_validate_field79_data",
            "name": "Extract and Validate UETR and Original Amount from Field 79",
            "description": "Extract UETR from Block3/Field 79 and Original Amount from Field 79, validate formats",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field_79_uetr_line",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.79.information"},
                                { "reduce": [
                                    {"var": "data.SwiftMT.fields.79.information"},
                                    { "if": [
                                        {"in": ["/UETR/", {"var": "current"}]},
                                        {"var": "current"},
                                        {"var": "accumulator"}
                                    ]},
                                    null
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.final_uetr",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                { "if": [
                                    {"var": "temp_data.field_79_uetr_line"},
                                    {"substr": [{"var": "temp_data.field_79_uetr_line"}, 6]},
                                    null
                                ]}
                            ]}
                        },
                        {
                            "path": "temp_data.field_79_origamt_line",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.79.information"},
                                { "reduce": [
                                    {"var": "data.SwiftMT.fields.79.information"},
                                    { "if": [
                                        {"in": ["/ORIGAMT/", {"var": "current"}]},
                                        {"var": "current"},
                                        {"var": "accumulator"}
                                    ]},
                                    null
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.original_currency",
                            "logic": { "if": [
                                {"var": "temp_data.field_79_origamt_line"},
                                {
                                    "substr": [{"substr": [{"var": "temp_data.field_79_origamt_line"}, 9]}, 0, 3]
                                },
                                "USD"
                            ]}
                        },
                        {
                            "path": "temp_data.original_amount",
                            "logic": { "if": [
                                {"var": "temp_data.field_79_origamt_line"},
                                {"substr": [{"substr": [{"var": "temp_data.field_79_origamt_line"}, 9]}, 3]},
                                "0.00"
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "validate_mandatory_fields",
            "name": "Validate Mandatory Fields (UETR and Original Amount)",
            "description": "Ensure UETR and Original Amount are present with valid formats",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "logic": { "and": [
                                {"var": "temp_data.final_uetr"},
                                {"==": [{"length": {"var": "temp_data.final_uetr"}}, 36]}
                            ]},
                            "message": "T20087: UETR not found in Block3 or Field 79, or invalid UETR format"
                        },
                        {
                            "logic": { "if": [
                                {"var": "temp_data.field_79_origamt_line"},
                                true,
                                false
                            ]},
                            "message": "T20088: Original amount (/ORIGAMT/) is mandatory in Field 79"
                        }
                    ]
                }
            }
        },
        {
            "id": "PREC004_validate_field_11s",
            "name": "PREC004: Validate Field 11S Message Type",
            "description": "Validate that Field 11S message type is 10n or 20n (n=0-9)",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "or": [
                                { "and": [
                                    {">=": [{"var": "data.SwiftMT.fields.11S.message_type"}, "100"]},
                                    {"<=": [{"var": "data.SwiftMT.fields.11S.message_type"}, "109"]}
                                ]},
                                { "and": [
                                    {">=": [{"var": "data.SwiftMT.fields.11S.message_type"}, "200"]},
                                    {"<=": [{"var": "data.SwiftMT.fields.11S.message_type"}, "209"]}
                                ]}
                            ]},
                            "message": "T20278: Field 11S message type must be 10n or 20n (n=0-9)"
                        }
                    ]
                }
            }
        },
        {
            "id": "extract_original_message_type",
            "name": "Extract and Convert Original Message Type",
            "description": "Extract original MT type from field 11S and convert to MX equivalent",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.original_mt_type",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.11S.message_type"},
                                {"var": "data.SwiftMT.fields.11S.message_type"},
                                "202"
                            ]}
                        },
                        {
                            "path": "temp_data.original_mx_type",
                            "logic": { "if": [
                                {"==": [{"var": "data.SwiftMT.fields.11S.message_type"}, "103"]},
                                "pacs.008",
                                { "if": [
                                    {"==": [{"var": "data.SwiftMT.fields.11S.message_type"}, "104"]},
                                    "pacs.003",
                                    { "if": [
                                        {"==": [{"var": "data.SwiftMT.fields.11S.message_type"}, "202"]},
                                        "pacs.009",
                                        { "if": [
                                            {"==": [{"var": "data.SwiftMT.fields.11S.message_type"}, "205"]},
                                            "pacs.009",
                                            { "if": [
                                                {"==": [{"var": "data.SwiftMT.fields.11S.message_type"}, "204"]},
                                                "pacs.010",
                                                {"cat": ["MT", {"var": "data.SwiftMT.fields.11S.message_type"}]}
                                            ]}
                                        ]}
                                    ]}
                                ]}
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "extract_cancellation_reason",
            "name": "Extract Cancellation Reason from Field 79",
            "description": "Process Field 79 to extract cancellation reason code and additional information",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.field_79_without_uetr",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.79.information"},
                                {
                                    "filter": [
                                        {"var": "data.SwiftMT.fields.79.information"},
                                        {"not": {"in": ["/UETR/", {"var": ""}]}}
                                    ]
                                },
                                []
                            ]}
                        },
                        {
                            "path": "temp_data.field_79_without_origamt",
                            "logic": { "if": [
                                {"var": "temp_data.field_79_without_uetr"},
                                {
                                    "filter": [
                                        {"var": "temp_data.field_79_without_uetr"},
                                        {"not": {"in": ["/ORIGAMT/", {"var": ""}]}}
                                    ]
                                },
                                []
                            ]}
                        },
                        {
                            "path": "temp_data.field_79_reason_line",
                            "logic": { "if": [
                                {"var": "temp_data.field_79_without_origamt"},
                                { "reduce": [
                                    {"var": "temp_data.field_79_without_origamt"},
                                    { "if": [
                                        {"in": ["/REASON/", {"var": "current"}]},
                                        {"var": "current"},
                                        {"var": "accumulator"}
                                    ]},
                                    null
                                ]},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.cancellation_reason",
                            "logic": { "if": [
                                {"var": "temp_data.field_79_reason_line"},
                                { "if": [
                                    {
                                        "in": [
                                            {"substr": [{"var": "temp_data.field_79_reason_line"}, 8]},
                                            ["AGNT", "AM09", "COVR", "CURR", "CUST", "CUTA", "DUPL", "FRAD", "TECH", "UPAY"]
                                        ]
                                    },
                                    {"substr": [{"var": "temp_data.field_79_reason_line"}, 8]},
                                    "NARR"
                                ]},
                                "NARR"
                            ]}
                        },
                        {
                            "path": "temp_data.cancellation_additional_info",
                            "logic": { "if": [
                                {"var": "temp_data.field_79_without_origamt"},
                                {
                                    "filter": [
                                        {"var": "temp_data.field_79_without_origamt"},
                                        {"not": {"in": ["/REASON/", {"var": ""}]}}
                                    ]
                                },
                                ["NOTPROVIDED"]
                            ]}
                        }
                    ]
                }
            }
        }
    ]
}
