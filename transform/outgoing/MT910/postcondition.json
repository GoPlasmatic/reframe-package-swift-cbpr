{
    "id": "mt910-postcondition",
    "name": "MT910 to camt.054 Postcondition Validation",
    "description": "CBPR+ postcondition validation for MT910 to camt.054 transformation ensuring compliance and data integrity",
    "priority": 5,
    "condition": { "and": [
        {"==": [{"var": "metadata.direction"}, "outgoing"]},
        {"==": [{"var": "metadata.SwiftMT.message_type"}, "910"]},
        {"==": [{"var": "metadata.SwiftMT.method"}, "normal"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "mt910-document-mapper"]},
        {"==": [{"var": "metadata.progress.task_id"}, "publish_mx_message"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "POSTC001_validate_mandatory_fields",
            "name": "Validate Mandatory camt.054 Fields",
            "description": "Ensures all mandatory camt.054 fields are present and not empty",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.GrpHdr",
                            "logic": { "and": [
                                {"var": "MsgId"},
                                {"var": "CreDtTm"},
                                {"!=": [{"var": "MsgId"}, "NOTPROVIDED"]}
                            ]},
                            "message": "POSTC001: Missing mandatory Group Header fields"
                        },
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0",
                            "logic": { "and": [
                                {"var": "Id"},
                                {"var": "CreDtTm"},
                                {"var": "Acct"}
                            ]},
                            "message": "POSTC001: Missing mandatory Notification fields"
                        },
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0",
                            "logic": { "and": [
                                {"var": "NtryRef"},
                                {"var": "Amt"},
                                {"==": [{"var": "CdtDbtInd"}, "CRDT"]},
                                {"==": [{"var": "Sts.Cd"}, "BOOK"]}
                            ]},
                            "message": "POSTC001: Missing mandatory Entry fields or incorrect credit indicator"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC002_validate_account_structure",
            "name": "Validate Account Structure",
            "description": "Ensures account information is properly structured with currency",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Acct",
                            "logic": { "and": [
                                {"var": "Id.Othr.Id"},
                                {"var": "Ccy"},
                                {"!=": [{"var": "Id.Othr.Id"}, "NOTPROVIDED"]},
                                {"!=": [{"var": "Ccy"}, ""]}
                            ]},
                            "message": "POSTC002: Account must have valid identification and currency"
                        },
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Acct",
                            "logic": { "if": [
                                {"var": "Svcr.FinInstnId.BICFI"},
                                {"!=": [{"var": "Svcr.FinInstnId.BICFI"}, "NOTPROVIDED"]},
                                true
                            ]},
                            "message": "POSTC002: Account servicer must have valid BIC"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC003_validate_transaction_details",
            "name": "Validate Transaction Details",
            "description": "Ensures transaction details are properly structured for credit confirmation",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0",
                            "logic": { "if": [
                                {"var": "NtryDtls.0.TxDtls.0"},
                                { "and": [
                                    {"var": "NtryDtls.0.TxDtls.0.Refs"},
                                    {"==": [{"var": "NtryDtls.0.TxDtls.0.CdtDbtInd"}, "CRDT"]},
                                    {"var": "NtryDtls.0.TxDtls.0.Amt"},
                                    {"==": [{"var": "NtryDtls.0.TxDtls.0.Amt.@Ccy"}, {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.Amt.@Ccy"}]}
                                ]},
                                true
                            ]},
                            "message": "POSTC003: Transaction details must have references, amounts, and credit indicator"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC004_validate_dates",
            "name": "Validate Date Fields",
            "description": "Ensures all date fields are properly formatted and consistent",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0",
                            "logic": { "and": [
                                {"var": "ValDt.Dt"},
                                {"!=": [{"var": "ValDt.Dt"}, "9999-12-31"]}
                            ]},
                            "message": "POSTC004: Value date must be present and valid"
                        },
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0",
                            "logic": { "if": [
                                {"var": "BookgDt.DtTm"},
                                { "or": [
                                    {"!=": [{"var": "BookgDt.DtTm"}, "9999-12-31T00:00:00+00:00"]},
                                    {"==": [{"var": "BookgDt.DtTm"}, "9999-12-31T00:00:00+00:00"]}
                                ]},
                                true
                            ]},
                            "message": "POSTC004: Booking date time must be properly formatted"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC005_validate_references",
            "name": "Validate Reference Fields",
            "description": "Ensures all reference fields are properly mapped from MT910",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.20.reference"},
                                { "and": [
                                    {"==": [{"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.GrpHdr.MsgId"}, {"var": "data.SwiftMT.fields.20.reference"}]},
                                    {"==": [{"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Id"}, {"var": "data.SwiftMT.fields.20.reference"}]},
                                    {"==": [{"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryRef"}, {"var": "data.SwiftMT.fields.20.reference"}]}
                                ]},
                                true
                            ]},
                            "message": "POSTC005: Field 20 reference not properly mapped to all required locations"
                        },
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.21.reference"},
                                { "and": [
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.Refs.EndToEndId"},
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.Refs.InstrId"}
                                ]},
                                true
                            ]},
                            "message": "POSTC005: Field 21 related reference not properly mapped"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC006_validate_cbpr_compliance",
            "name": "Validate CBPR+ Compliance",
            "description": "Ensures transformation meets CBPR+ specific requirements",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "and": [
                                {"==": [{"var": "AppHdr.BizSvc"}, "swift.cbprplus.02"]},
                                {"==": [{"var": "AppHdr.MsgDefIdr"}, "camt.054.001.08"]}
                            ]},
                            "message": "POSTC006: Invalid CBPR+ service or message definition identifier"
                        },
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"},
                                { "if": [
                                    {"var": "Ntry.0.NtryDtls.0.TxDtls.0.Refs.UETR"},
                                    {"==": [{"var": "Ntry.0.NtryDtls.0.TxDtls.0.Refs.UETR"}, {"var": "data.SwiftMT.user_header.unique_end_to_end_reference"}]},
                                    false
                                ]},
                                true
                            ]},
                            "message": "POSTC006: UETR from user header not properly mapped"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC007_validate_amount_consistency",
            "name": "Validate Amount Consistency",
            "description": "Ensures amounts are consistent throughout the message",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.32A.amount"},
                                { "and": [
                                    {"==": [{"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.Amt.$value"}, {"var": "data.SwiftMT.fields.32A.amount"}]},
                                    {"==": [{"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.Amt.@Ccy"}, {"var": "data.SwiftMT.fields.32A.currency"}]}
                                ]},
                                true
                            ]},
                            "message": "POSTC007: Field 32A amount/currency not properly mapped"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC008_validate_party_fields",
            "name": "Validate Party Field Mappings",
            "description": "Ensures party fields (50, 52, 56) are properly mapped",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                { "or": [
                                    {"var": "data.SwiftMT.fields.50A"},
                                    {"var": "data.SwiftMT.fields.50F"},
                                    {"var": "data.SwiftMT.fields.50K"}
                                ]},
                                { "or": [
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.RltdPties.Cdtr"},
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.RltdPties.CdtrAcct"}
                                ]},
                                true
                            ]},
                            "message": "POSTC008: Field 50 (Ordering Customer) not properly mapped"
                        },
                        {
                            "path": "data",
                            "logic": { "if": [
                                { "or": [
                                    {"var": "data.SwiftMT.fields.52A"},
                                    {"var": "data.SwiftMT.fields.52D"}
                                ]},
                                { "or": [
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.RltdPties.CdtrAgt"},
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.RltdAgts.CdtrAgt"}
                                ]},
                                true
                            ]},
                            "message": "POSTC008: Field 52 (Ordering Institution) not properly mapped"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC009_validate_field72_processing",
            "name": "Validate Field 72 Processing",
            "description": "Ensures Field 72 is processed according to TR001 specification",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data",
                            "logic": { "if": [
                                {"var": "data.SwiftMT.fields.72.information"},
                                { "and": [
                                    {"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.AddtlTxInf"},
                                    {"!=": [{"var": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0.NtryDtls.0.TxDtls.0.AddtlTxInf"}, ""]}
                                ]},
                                true
                            ]},
                            "message": "POSTC009: Field 72 information not properly processed according to TR001"
                        }
                    ]
                }
            }
        },
        {
            "id": "POSTC010_validate_entry_status",
            "name": "Validate Entry Status and Type",
            "description": "Ensures entry is properly marked as credit confirmation with booked status",
            "function": {
                "name": "validate",
                "input": {
                    "rules": [
                        {
                            "path": "data.MxEnvelope.Document.BkToCstmrDbtCdtNtfctn.Ntfctn.0.Ntry.0",
                            "logic": { "and": [
                                {"==": [{"var": "CdtDbtInd"}, "CRDT"]},
                                {"==": [{"var": "Sts.Cd"}, "BOOK"]},
                                {"var": "BkTxCd.Prtry.Cd"},
                                {"var": "BkTxCd.Prtry.Issr"}
                            ]},
                            "message": "POSTC010: Entry must be marked as booked credit with proper bank transaction code"
                        }
                    ]
                }
            }
        }
    ]
}
