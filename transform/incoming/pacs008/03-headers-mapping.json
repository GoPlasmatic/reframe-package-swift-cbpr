{
    "id": "pacs008-to-mt103-headers",
    "name": "pacs.008 to MT103 Headers Construction",
    "description": "Constructs SWIFT MT103 basic and application headers from pacs.008 BAH information",
    "priority": 4,
    "condition": { "and": [
        {"==": [{"var": "metadata.ISO20022_MX.message_type"}, "pacs.008"]},
        {"==": [{"var": "metadata.transformation_direction"}, "mx-to-mt"]},
        {"==": [{"var": "metadata.progress.workflow_id"}, "pacs008-to-mt103-preconditions"]},
        {"==": [{"var": "metadata.progress.task_id"}, "validate_mandatory_elements"]},
        {"==": [{"var": "metadata.progress.status_code"}, 200]}
    ]},
    "tasks": [
        {
            "id": "extract_temp_variables",
            "name": "Extract Temporary Variables",
            "description": "Extract sender and receiver BIC codes from header for use in translation rules (TR013)",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "temp_data.Sender",
                            "logic": { "if": [
                                {"var": "data.ISO20022_MX.AppHdr.Fr.FIId.FinInstnId.BICFI"},
                                {"var": "data.ISO20022_MX.AppHdr.Fr.FIId.FinInstnId.BICFI"},
                                null
                            ]}
                        },
                        {
                            "path": "temp_data.Receiver",
                            "logic": { "if": [
                                {"var": "data.ISO20022_MX.AppHdr.To.FIId.FinInstnId.BICFI"},
                                {"var": "data.ISO20022_MX.AppHdr.To.FIId.FinInstnId.BICFI"},
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "construct_swift_headers",
            "name": "Construct SWIFT Headers",
            "description": "Build SWIFT MT103 basic and application headers using sender and receiver BICs",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.SwiftMT",
                            "logic": {
                                "message_type": "103",
                                "basic_header": {
                                    "application_id": "F",
                                    "service_id": "01",
                                    "sender_bic": { "if": [
                                        {"var": "temp_data.Sender"},
                                        {
                                            "substr": [{"var": "temp_data.Sender"}, 0, 8]
                                        },
                                        null
                                    ]},
                                    "logical_terminal": { "if": [
                                        {"==": [{"length": {"var": "temp_data.Sender"}}, 8]},
                                        {
                                            "cat": [
                                                {
                                                    "substr": [{"var": "temp_data.Sender"}, 0, 8]
                                                },
                                                "AXXX"
                                            ]
                                        },
                                        { "if": [
                                            {"==": [{"length": {"var": "temp_data.Sender"}}, 11]},
                                            {
                                                "cat": [
                                                    {
                                                        "substr": [{"var": "temp_data.Sender"}, 0, 8]
                                                    },
                                                    "A",
                                                    {
                                                        "substr": [{"var": "temp_data.Sender"}, 8, 3]
                                                    }
                                                ]
                                            },
                                            {
                                                "cat": [
                                                    {
                                                        "substr": [{"var": "temp_data.Sender"}, 0, 8]
                                                    },
                                                    "AXXX"
                                                ]
                                            }
                                        ]}
                                    ]},
                                    "session_number": "0000",
                                    "sequence_number": "000000"
                                },
                                "application_header": {
                                    "direction": "I",
                                    "message_type": "103",
                                    "priority": "N",
                                    "receiver_bic": { "if": [
                                        {"var": "temp_data.Receiver"},
                                        {
                                            "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                                        },
                                        null
                                    ]},
                                    "destination_address": { "if": [
                                        {"==": [{"length": {"var": "temp_data.Receiver"}}, 8]},
                                        {
                                            "cat": [
                                                {
                                                    "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                                                },
                                                "AXXX"
                                            ]
                                        },
                                        { "if": [
                                            {"==": [{"length": {"var": "temp_data.Receiver"}}, 11]},
                                            {
                                                "cat": [
                                                    {
                                                        "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                                                    },
                                                    "A",
                                                    {
                                                        "substr": [{"var": "temp_data.Receiver"}, 8, 3]
                                                    }
                                                ]
                                            },
                                            {
                                                "cat": [
                                                    {
                                                        "substr": [{"var": "temp_data.Receiver"}, 0, 8]
                                                    },
                                                    "AXXX"
                                                ]
                                            }
                                        ]}
                                    ]}
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "id": "map_block3_service_code",
            "name": "Map Block 3 Service Type Identifier",
            "description": "TR010: Map ServiceLevel G00n pattern to Block 3 Service Type Identifier",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.SwiftMT.block3.service_type_identifier",
                            "logic": { "if": [
                                { "and": [
                                    {"var": "data.ISO20022_MX.Document.FIToFICstmrCdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl.Cd"},
                                    {"==": [{"substr": [{"var": "data.ISO20022_MX.Document.FIToFICstmrCdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl.Cd"}, 0, 1]}, "G"]},
                                    {
                                        "in": [
                                            {
                                                "substr": [
                                                    {"var": "data.ISO20022_MX.Document.FIToFICstmrCdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl.Cd"},
                                                    1,
                                                    3
                                                ]
                                            },
                                            ["001", "002", "003", "004", "005", "006", "007", "008", "009"]
                                        ]
                                    }
                                ]},
                                {
                                    "substr": [
                                        {"var": "data.ISO20022_MX.Document.FIToFICstmrCdtTrf.CdtTrfTxInf.PmtTpInf.SvcLvl.Cd"},
                                        1,
                                        3
                                    ]
                                },
                                null
                            ]}
                        }
                    ]
                }
            }
        },
        {
            "id": "map_user_header",
            "name": "Map User Header",
            "description": "Map unique end-to-end transaction reference (UETR) to user header",
            "function": {
                "name": "map",
                "input": {
                    "mappings": [
                        {
                            "path": "data.SwiftMT.user_header",
                            "logic": {
                                "unique_end_to_end_reference": { "if": [
                                    {"var": "data.ISO20022_MX.Document.FIToFICstmrCdtTrf.CdtTrfTxInf.PmtId.UETR"},
                                    {"var": "data.ISO20022_MX.Document.FIToFICstmrCdtTrf.CdtTrfTxInf.PmtId.UETR"},
                                    null
                                ]}
                            }
                        }
                    ]
                }
            }
        }
    ]
}
